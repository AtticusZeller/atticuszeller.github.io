{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"HomeHi there, I'm Atticus Zeller \ud83d\udc4b","text":"<ul> <li>\ud83d\udd2d I\u2019m currently working on computer vision like deep learning and 3D-reconstruction</li> <li>\u26a1 Fun fact: I'm also an analog photography enthusiast and a sports aficionado</li> </ul> Languages and Tools:"},{"location":"Backend/FastApi/","title":"FastApi","text":"<p>The function parameters will be recognized as follows:</p> <ol> <li>If the parameter is also declared in the path, it will be used as a path parameter.</li> <li>If the parameter is of a singular type (like int, float, str, bool, etc) it will be interpreted as a query parameter.</li> </ol> <p>Info</p> <p>FastAPI will know that the value of q is not required because of the default value = None.</p> <ol> <li>If the parameter is declared to be of the type of a Pydantic model, it will be interpreted as a request body.</li> </ol>"},{"location":"Backend/DB/PostgreSQL/","title":"PostgreSQL","text":"<p>PostgreSQL Tutorial DBA Roadmap: Learn to become a database administrator with PostgreSQL</p>"},{"location":"Backend/DB/PostgreSQL/#initial-config","title":"Initial Config","text":""},{"location":"Backend/DB/PostgreSQL/#postgresql_1","title":"PostgreSQL","text":""},{"location":"Backend/DB/PostgreSQL/#install","title":"Install","text":"<p>Automated repository configuration:</p> <pre><code>sudo apt install -y postgresql-common\nsudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh\n</code></pre> <pre><code># Update the package lists:\nsudo apt update\n\n# Install the latest version of PostgreSQL:\n# If you want a specific version, use 'postgresql-16' or similar instead of 'postgresql'\nsudo apt -y install postgresql-16\n</code></pre> <p>start/stop app</p> <pre><code>sudo systemctl start/stop postgresql\n</code></pre> <p>start/stop as start up</p> <pre><code>sudo systemctl enable/disable postgresql\n</code></pre>"},{"location":"Backend/DB/PostgreSQL/#configure-postgresql-server-remote","title":"Configure PostgreSQL Server (remote)","text":"<p>Install PostgreSQL on Linux (Ubuntu) set listening port as <code>listen_addresses = '*'</code></p> <pre><code>sudo nano /etc/postgresql/16/main/postgresql.conf\n</code></pre> <p>enable remote connections</p> <pre><code>sudo sed -i '/^host/s/ident/md5/' /etc/postgresql/16/main/pg_hba.conf sudo sed -i '/^local/s/peer/trust/' /etc/postgresql/16/main/pg_hba.conf echo \"host all all 0.0.0.0/0 md5\" | sudo tee -a /etc/postgresql/16/main/pg_hba.conf\nsudo systemctl restart postgresql\nsudo ufw allow 5432/tcp\n</code></pre>"},{"location":"Backend/DB/PostgreSQL/#connection","title":"Connection","text":"<p>switch to <code>postgres</code> user and get into <code>psql</code></p> <pre><code>sudo -u postgres psql\n</code></pre> <p>input your password then with <code>\\q</code> to quit</p> <pre><code>\\password postgres\n</code></pre> <p>Default User</p> <p>username: postgres</p> <p>pswd: postgres</p> <p>port: 5423</p> <p>ip: localhost</p>"},{"location":"Backend/DB/PostgreSQL/#pgadmin","title":"pgAdmin","text":""},{"location":"Backend/DB/PostgreSQL/#install_1","title":"Install","text":"<p>a web-based tool to connect to the PostgreSQL server</p> <p>PostgreSQL Administration</p> <p>Setup the Repository</p> <pre><code># Install the public key for the repository (if not done previously):\ncurl -fsS https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo gpg --dearmor -o /usr/share/keyrings/packages-pgadmin-org.gpg\n\n# Create the repository configuration file:\nsudo sh -c 'echo \"deb [signed-by=/usr/share/keyrings/packages-pgadmin-org.gpg] https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main\" &gt; /etc/apt/sources.list.d/pgadmin4.list &amp;&amp; apt update'\n</code></pre> <p>Install pgAdmin</p> <pre><code># Install for both desktop and web modes:\nsudo apt install pgadmin4\n\n# Install for desktop mode only: for local development\nsudo apt install pgadmin4-desktop\n\n# Install for web mode only:  for remote server\nsudo apt install pgadmin4-web\n\n# Configure the webserver, if you installed pgadmin4-web:\nsudo /usr/pgadmin4/bin/setup-web.sh\n</code></pre> <p>Dark model <code>Preferences --&gt; User Interface --&gt; Themes --&gt; Dark</code></p> <p>Register Server Dialog \u2014 pgAdmin 4 8.11 documentation</p>"},{"location":"Backend/DB/Sqlite/","title":"Sqlite","text":""},{"location":"Backend/DB/ORM/SQLModel/","title":"SQLModel","text":"<p>Tutorial - User Guide - SQLModel</p>"},{"location":"Features/Admonitions/","title":"Admonitions","text":"<p>Callouts - Obsidian Help</p> <p>Note</p> <p>This is a note callout.</p> <p>Abstract</p> <p>This is an abstract or summary callout.</p> <p>Information</p> <p>This is an info callout.</p> <p>Helpful Tip</p> <p>This is a tip or hint callout.</p> <p>Task Completed</p> <p>This is a success callout.</p> <p>Frequently Asked Question</p> <p>This is a question or FAQ callout.</p> <p>Be Careful!</p> <p>This is a warning callout.</p> <p>Error Occurred</p> <p>This is a failure or error callout.</p> <p>Danger Zone</p> <p>This is a danger callout.</p> <p>Known Issue</p> <p>This is a bug callout.</p> <p>Code Example</p> <p>This is an example callout.</p> <p>Famous Words</p> <p>This is a quote callout.</p>"},{"location":"Features/Diagrams/","title":"Diagrams","text":"<p>Diagrams help to communicate complex relationships and interconnections between different technical components, and are a great addition to project documentation. Material for MkDocs integrates with Mermaid.js, a very popular and flexible solution for drawing diagrams.</p>"},{"location":"Features/Diagrams/#configuration","title":"Configuration","text":"<p>This configuration enables native support for Mermaid.js diagrams. Material for MkDocs will automatically initialize the JavaScript runtime when a page includes a <code>mermaid</code> code block:</p> <pre><code>markdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n</code></pre> <p>No further configuration is necessary. Advantages over a custom integration:</p> <ul> <li> Works with instant loading without any additional effort</li> <li> Diagrams automatically use fonts and colors defined in <code>mkdocs.yml</code>[^1]</li> <li> Fonts and colors can be customized with additional style sheets</li> <li> Support for both, light and dark color schemes \u2013 try it on this page!</li> </ul> <p>:[^1]</p> <p>While all Mermaid.js features should work out-of-the-box, Material for  MkDocs will currently only adjust the fonts and colors for flowcharts,  sequence diagrams, class diagrams, state diagrams and entity relationship  diagrams. See the section on other diagrams for more information why this  is currently not implemented for all diagrams.</p>"},{"location":"Features/Diagrams/#usage","title":"Usage","text":""},{"location":"Features/Diagrams/#using-flowcharts","title":"Using Flowcharts","text":"<p>Flowcharts are diagrams that represent workflows or processes. The steps are rendered as nodes of various kinds and are connected by edges, describing the necessary order of steps:</p> Flow chart<pre><code>``` mermaid\ngraph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];\n```\n</code></pre> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"},{"location":"Features/Diagrams/#using-sequence-diagrams","title":"Using Sequence Diagrams","text":"<p>Sequence diagrams describe a specific scenario as sequential interactions between multiple objects or actors, including the messages that are exchanged between those actors:</p> Sequence diagram<pre><code>``` mermaid\nsequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!\n```\n</code></pre> <pre><code>sequenceDiagram\n  autonumber\n  Alice-&gt;&gt;John: Hello John, how are you?\n  loop Healthcheck\n      John-&gt;&gt;John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John--&gt;&gt;Alice: Great!\n  John-&gt;&gt;Bob: How about you?\n  Bob--&gt;&gt;John: Jolly good!</code></pre>"},{"location":"Features/Diagrams/#using-state-diagrams","title":"Using State Diagrams","text":"<p>State diagrams are a great tool to describe the behavior of a system, decomposing it into a finite number of states, and transitions between those states:</p> State diagram<pre><code>``` mermaid\nstateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]\n```\n</code></pre> <pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n    [*] --&gt; fork_state\n    fork_state --&gt; State2\n    fork_state --&gt; State3\n\n    state join_state &lt;&lt;join&gt;&gt;\n    State2 --&gt; join_state\n    State3 --&gt; join_state\n    join_state --&gt; State4\n    State4 --&gt; [*]</code></pre>"},{"location":"Features/Diagrams/#using-class-diagrams","title":"Using Class Diagrams","text":"<p>Class diagrams are central to object oriented programming, describing the structure of a system by modelling entities as classes and relationships between them:</p> Class diagram<pre><code>``` mermaid\nclassDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()\n  }\n```\n</code></pre> <pre><code>classDiagram\n  Person &lt;|-- Student\n  Person &lt;|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" &lt;-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()\n  }</code></pre>"},{"location":"Features/Diagrams/#using-entity-relationship-diagrams","title":"Using Entity-relationship Diagrams","text":"<p>An entity-relationship diagram is composed of entity types and specifies relationships that exist between entities. It describes inter-related things in a specific domain of knowledge:</p> Entity-relationship diagram<pre><code>``` mermaid\nerDiagram\n  CUSTOMER ||--o{ ORDER : places\n  ORDER ||--|{ LINE-ITEM : contains\n  LINE-ITEM {\n    string name\n    int pricePerUnit\n  }\n  CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n```\n</code></pre> <pre><code>erDiagram\n  CUSTOMER ||--o{ ORDER : places\n  ORDER ||--|{ LINE-ITEM : contains\n  LINE-ITEM {\n    string name\n    int pricePerUnit\n  }\n  CUSTOMER }|..|{ DELIVERY-ADDRESS : uses</code></pre>"},{"location":"Features/Diagrams/#other-diagram-types","title":"Other Diagram Types","text":"<p>Besides the diagram types listed above, Mermaid.js provides support for pie charts, gantt charts, user journeys, git graphs and requirement diagrams, all of which are not officially supported by Material for MkDocs. Those diagrams should still work as advertised by Mermaid.js, but we don't consider them a good choice, mostly as they don't work well on mobile.</p> <p>Backlinks:</p>"},{"location":"Features/Icons%2C%20Emojis/","title":"Icons, Emojis","text":""},{"location":"Features/Icons%2C%20Emojis/#emojis","title":"Emojis","text":"<p>use obsidian plugin to autocomplete GitHub - KraXen72/obsidian-emoji-autocomplete: Emoji Shortcodes Autocomplete for Obsidian</p> <ul> <li>\ud83d\ude00</li> <li>\ud83d\ude22</li> <li>\ud83d\udd2b</li> <li>\ud83e\udd70</li> <li>\ud83d\ude3b</li> </ul>"},{"location":"Features/Icons%2C%20Emojis/#icons","title":"Icons","text":"<p>search in Icons, Emojis - Material for MkDocs</p>"},{"location":"Features/Image/","title":"Image","text":"<p>Images - Material for MkDocs</p> <p></p> <p></p> <p> </p> <p></p> <p> Lucid visual collaboration suite: Log in  ![assets/Flowcharts (2).svg </p>"},{"location":"Features/LaTeX%20Math%20Support/","title":"LaTeX Math Support","text":"<p>LaTeX math is supported using MathJax.</p> <p>Inline math looks like \\(f(x) = x^2\\). The input for this is <code>$f(x) = x^2$</code>. Use <code>$\u2026$</code>.</p> <p>For a block of math, use <code>$$\u2026$$</code> on separate lines</p> <pre><code>$$\nF(x) = \\int^a_b \\frac{1}{2}x^4\n$$\n</code></pre> <p>gives</p> \\[ F(x) = \\int^a_b \\frac{1}{2}x^4 \\] \\[ D(\\mathbf{p}) = \\sum_{n \\leq N} d_n \\cdot \\alpha_n \\cdot T_n, \\quad \\text{where } T_n = \\prod_{m&lt;n} (1 - \\alpha_m) \\]"},{"location":"Features/Table/","title":"Table","text":"Methods Avg. R0 R1 R2 Of0 Of1 Of2 Of3 Of4 DROID-SLAM 0.38 0.53 0.38 0.45 0.35 0.24 0.36 0.33 0.43 Vox-Fusion 3.09 1.37 4.70 1.47 8.48 2.04 2.58 1.11 2.94 NICE-SLAM 1.06 0.97 1.31 1.07 0.88 1.00 1.06 1.10 1.13 ESLAM 0.63 0.71 0.70 0.52 0.57 0.55 0.58 0.72 0.63 Point-SLAM 0.52 0.61 0.41 0.37 0.38 0.48 0.54 0.69 0.72 SplaTAM 0.36 0.31 0.40 0.29 0.47 0.27 0.29 0.32 0.55"},{"location":"Features/Text%20Formatting/","title":"Text Formatting","text":""},{"location":"Features/Text%20Formatting/#list","title":"List","text":"<p>Lists - Material for MkDocs</p>"},{"location":"Features/Text%20Formatting/#attr_list","title":"attr_list","text":"<ul> <li>attr_list</li> <li>attr_list</li> <li>attr_list</li> </ul>"},{"location":"Features/Text%20Formatting/#pymdownxtasklist","title":"pymdownx.tasklist","text":"<ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Vestibulum convallis sit amet nisi a tincidunt</li> <li> In hac habitasse platea dictumst</li> <li> In scelerisque nibh non dolor mollis congue sed et metus</li> <li> Praesent sed risus massa</li> <li> Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque</li> </ul>"},{"location":"Features/Text%20Formatting/#def_list","title":"def_list","text":""},{"location":"Features/Text%20Formatting/#list-unordered","title":"List, Unordered","text":"<ul> <li> <p>Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur   accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh   lacinia sed. Aenean in finibus diam.</p> </li> <li> <p>Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.</p> </li> <li>Name vulputate tincidunt fringilla.</li> <li>Nullam dignissim ultrices urna non auctor.</li> </ul>"},{"location":"Features/Text%20Formatting/#using-ordered-lists","title":"Using Ordered Lists","text":"<ol> <li> <p>Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis  sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis  nulla. Vivamus a pharetra leo.</p> </li> <li> <p>Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet   quam enim, eu volutpat urna rutrum a. Name vehicula nunc mauris, a   ultricies libero efficitur sed.</p> </li> <li> <p>Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet   rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a.</p> </li> <li> <p>Mauris dictum mi lacus</p> </li> <li>Ut sit amet placerat ante</li> <li>Suspendisse ac eros arcu</li> </ol>"},{"location":"Features/Text%20Formatting/#highlight-and-strikethrough","title":"Highlight and Strikethrough","text":"<p>Formatting - Material for MkDocs</p> <ul> <li>This was marked (highlight)</li> <li> <p>This was deleted (strikethrough)</p> </li> <li> <p>[?] question</p> </li> <li>[!] important</li> <li>[*] star</li> <li>[\"] quote</li> <li>[l] location</li> <li>[b] bookmark</li> <li>[i] information</li> <li>[S] savings</li> <li>[I] idea</li> <li>[p] pros</li> <li>[c] cons</li> <li>[f] fire</li> <li>[k] key</li> <li>[w] win</li> <li>[u] up</li> <li>[d] down</li> <li>[D] draft pull request</li> <li>[P] open pull request</li> <li>[M] merged pull request</li> </ul>"},{"location":"Features/code/","title":"Code","text":""},{"location":"Features/code/#block","title":"Block","text":"<pre><code>from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n</code></pre>"},{"location":"Features/code/#inline","title":"Inline","text":"<p>The <code>range()</code> function is used to generate a sequence of numbers.</p> <p>Diagrams Diagrams Draw</p> <p><code>python,shell from fastapi impart FastAPI</code></p> <ul> <li>item 1</li> <li>item 2</li> <li> <p>item 3</p> </li> <li> <p>Item 1</p> </li> <li>Item 2</li> <li>Item 3 Some text here</li> <li>Item 1</li> <li>Item 2</li> <li>Item 3</li> </ul> <p>Lorem ( \u2026 ) Impsum.</p> <ul> <li>item 1</li> <li>copypasted item A</li> <li>item 2</li> <li>indented item</li> <li>copypasted item B</li> </ul> <p>as</p>"},{"location":"Features/footntoes/","title":"Footntoes","text":"<p>Footnotes - Material for MkDocs Basic formatting syntax - Obsidian Help Lorem ipsum<sup>1</sup> dolor sit amet, consectetur adipiscing elit.<sup>2</sup> Vivamus luctus urna sed urna ultricies ac tempor dui sagittis.<sup>3</sup> Praesent tristique magna sit amet purus gravida quis blandit turpis cursus.<sup>4</sup> Curabitur non nulla sit amet nisl tempus convallis quis ac lectus.<sup>5</sup> Donec sollicitudin molestie malesuada.<sup>6</sup> Vivamus suscipit tortor eget felis porttitor volutpat.<sup>7</sup> Mauris blandit aliquet elit, eget tincidunt nibh pulvinar a.<sup>8</sup> Nulla porttitor accumsan tincidunt.<sup>9</sup> Proin eget tortor risus.<sup>10</sup> ok ^[foot note test] \u9762\u5411\u5bf9\u8c61</p> <ol> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\u00a0\u21a9</p> </li> <li> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla.\u00a0\u21a9</p> </li> <li> <p>Vivamus luctus urna sed urna ultricies ac tempor dui sagittis.\u00a0\u21a9</p> </li> <li> <p>Praesent tristique magna sit amet purus gravida quis blandit turpis cursus.\u00a0\u21a9</p> </li> <li> <p>Curabitur non nulla sit amet nisl tempus convallis quis ac lectus.\u00a0\u21a9</p> </li> <li> <p>Donec sollicitudin molestie malesuada.\u00a0\u21a9</p> </li> <li> <p>Vivamus suscipit tortor eget felis porttitor volutpat.\u00a0\u21a9</p> </li> <li> <p>Mauris blandit aliquet elit, eget tincidunt nibh pulvinar a.\u00a0\u21a9</p> </li> <li> <p>Nulla porttitor accumsan tincidunt.\u00a0\u21a9</p> </li> <li> <p>Proin eget tortor risus, suscipit at, ultricies eget, tempor sit amet, ante.\u00a0\u21a9</p> </li> </ol>"},{"location":"Language/C%2B%2B/Pointer/","title":"Pointer","text":""},{"location":"Language/C%2B%2B/Pointer/#c","title":"C++ \u667a\u80fd\u6307\u9488\u7b80\u4ecb","text":"<p>\u667a\u80fd\u6307\u9488\u662f\u73b0\u4ee3 C++ \u4e2d\u7528\u4e8e\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\u7684\u5bf9\u8c61\uff0c\u901a\u8fc7\u5c01\u88c5\u539f\u59cb\u6307\u9488\uff0c\u5b83\u4eec\u5e2e\u52a9\u7a0b\u5e8f\u5458\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u5e76\u63d0\u4f9b\u5f02\u5e38\u5b89\u5168\u3002C++11 \u6807\u51c6\u5f15\u5165\u4e86\u51e0\u79cd\u667a\u80fd\u6307\u9488\u7c7b\u578b\uff0c\u4f7f\u5f97\u8d44\u6e90\u7ba1\u7406\u66f4\u52a0\u7b80\u5355\u548c\u5b89\u5168\u3002</p>"},{"location":"Language/C%2B%2B/Pointer/#_1","title":"\u667a\u80fd\u6307\u9488\u7c7b\u578b","text":"<ol> <li> <p><code>std::unique_ptr</code></p> </li> <li> <p>\u7279\u6027\uff1a\u63d0\u4f9b\u5bf9\u5185\u5b58\u7684\u72ec\u5360\u6240\u6709\u6743\uff0c\u5373\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u6709\u4e00\u4e2a <code>std::unique_ptr</code> \u53ef\u4ee5\u62e5\u6709\u8d44\u6e90\u3002</p> </li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u9700\u8981\u660e\u786e\u5355\u4e00\u6240\u6709\u6743\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u5728\u51fd\u6570\u5185\u90e8\u521b\u5efa\u4e34\u65f6\u5bf9\u8c61\u3002</li> <li>\u4e0d\u53ef\u590d\u5236\uff1a\u53ea\u80fd\u79fb\u52a8\uff0c\u786e\u4fdd\u6240\u6709\u6743\u7684\u552f\u4e00\u6027\u3002</li> <li> <p>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</p> </li> <li> <p><code>std::shared_ptr</code></p> </li> <li> <p>\u7279\u6027\uff1a\u652f\u6301\u591a\u91cd\u6240\u6709\u6743\u6982\u5ff5\uff0c\u5373\u591a\u4e2a <code>std::shared_ptr</code> \u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u8d44\u6e90\u3002</p> </li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u5bf9\u8c61\u751f\u547d\u5468\u671f\u9700\u8981\u7531\u591a\u4e2a\u6240\u6709\u8005\u5171\u540c\u7ba1\u7406\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u5728\u591a\u4e2a\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002</li> <li> <p>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</p> </li> <li> <p><code>std::weak_ptr</code></p> </li> <li>\u7279\u6027\uff1a\u63d0\u4f9b\u4e00\u79cd\u975e\u62e5\u6709\u6027\u7684\u667a\u80fd\u6307\u9488\uff0c\u7528\u6765\u89c2\u5bdf <code>std::shared_ptr</code>\uff0c\u4f46\u4e0d\u5f71\u54cd\u5176\u5f15\u7528\u8ba1\u6570\u3002</li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u89e3\u51b3 <code>std::shared_ptr</code> \u53ef\u80fd\u5bfc\u81f4\u7684\u5faa\u73af\u5f15\u7528\u95ee\u9898\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</li> </ol> <pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nclass Child;\nclass Parent;\n\nclass Parent : public std::enable_shared_from_this&lt;Parent&gt; {\npublic:\n    std::shared_ptr&lt;Child&gt; child;\n    ~Parent() { std::cout &lt;&lt; \"Parent destroyed\\n\"; }\n\n    void setChild(std::shared_ptr&lt;Child&gt; c) {\n        child = c;\n        child-&gt;setParent(shared_from_this());  // \u4f7f\u7528 shared_from_this() \u83b7\u53d6\u5f53\u524d\u5bf9\u8c61\u7684 shared_ptr\n    }\n};\n\nclass Child {\npublic:\n    std::weak_ptr&lt;Parent&gt; parent;  // \u4f7f\u7528 weak_ptr \u907f\u514d\u5faa\u73af\u5f15\u7528\n    ~Child() { std::cout &lt;&lt; \"Child destroyed\\n\"; }\n\n    void setParent(std::shared_ptr&lt;Parent&gt; p) {\n        parent = p;  // \u8bbe\u7f6e parent \u4e3a\u4f20\u5165\u7684 shared_ptr\n    }\n};\n\nint main() {\n    std::shared_ptr&lt;Parent&gt; p = std::make_shared&lt;Parent&gt;();\n    std::shared_ptr&lt;Child&gt; c = std::make_shared&lt;Child&gt;();\n    p-&gt;setChild(c);\n\n    std::cout &lt;&lt; \"Parent use count: \" &lt;&lt; p.use_count() &lt;&lt; std::endl;  // \u8f93\u51fa\u4f1a\u662f 2\uff0c\u56e0\u4e3a child \u4e5f\u6301\u6709 parent \u7684 shared_ptr\n    std::cout &lt;&lt; \"Child use count: \" &lt;&lt; c.use_count() &lt;&lt; std::endl;   // \u8f93\u51fa 1\n}\n</code></pre>"},{"location":"Language/C%2B%2B/Pointer/#_2","title":"\u521b\u5efa\u548c\u4f7f\u7528\u667a\u80fd\u6307\u9488","text":"<ul> <li><code>std::make_shared</code></li> <li>\u63cf\u8ff0\uff1a\u7528\u4e8e\u6784\u9020 <code>std::shared_ptr</code> \u7684\u4f18\u9009\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5728\u5355\u4e00\u64cd\u4f5c\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u63d0\u9ad8\u6548\u7387\u5e76\u51cf\u5c11\u5f02\u5e38\u98ce\u9669\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</li> <li><code>std::make_unique</code></li> <li>\u63cf\u8ff0\uff1a\u7528\u4e8e\u6784\u9020 <code>std::unique_ptr</code> \u7684\u65b9\u6cd5\u3002\u7c7b\u4f3c\u4e8e <code>std::make_shared</code>\uff0c\u4f46\u4e13\u4e3a <code>std::unique_ptr</code> \u8bbe\u8ba1\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++14\u3002</li> <li><code>shared_from_this</code></li> <li>\u63cf\u8ff0\uff1a\u5f53\u7c7b\u7ee7\u627f\u81ea <code>std::enable_shared_from_this</code> \u65f6\uff0c\u4f60\u53ef\u4ee5\u5b89\u5168\u5730\u5728\u7c7b\u5185\u90e8\u83b7\u53d6\u4e00\u4e2a\u6307\u5411\u81ea\u5df1\u7684 <code>std::shared_ptr</code>\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</li> </ul> <p><code>shared_from_this()</code> \u53ea\u80fd\u5728 <code>std::shared_ptr</code> \u5df2\u7ecf\u62e5\u6709\u8be5\u5bf9\u8c61\u65f6\u624d\u80fd\u5b89\u5168\u8c03\u7528\u3002\u5982\u679c\u5728\u4efb\u4f55 <code>std::shared_ptr</code> \u62e5\u6709\u5bf9\u8c61\u4e4b\u524d\u8c03\u7528\u5b83\uff0c\u7a0b\u5e8f\u5c06\u629b\u51fa <code>std::bad_weak_ptr</code> \u5f02\u5e38\u3002</p>"},{"location":"Language/C%2B%2B/Pointer/#_3","title":"\u4ee3\u7801\u793a\u4f8b","text":"<pre><code>#include &lt;memory&gt;\n#include &lt;iostream&gt;\n\nclass MyClass : public std::enable_shared_from_this&lt;MyClass&gt; {\npublic:\n    void show() {\n        auto sharedPtr = shared_from_this();\n        std::cout &lt;&lt; \"MyClass instance has \" &lt;&lt; sharedPtr.use_count() &lt;&lt; \" references\\n\";\n    }\n};\n\nint main() {\n    auto myObject = std::make_shared&lt;MyClass&gt;();\n    myObject-&gt;show();  // \u663e\u793a\u5f15\u7528\u8ba1\u6570\n}\n</code></pre>"},{"location":"Language/C%2B%2B/packages/","title":"Packages","text":""},{"location":"Language/C%2B%2B/packages/#pcl","title":"Pcl","text":"<pre><code>sudo apt update\nsudo apt install libpcl-dev\n</code></pre>"},{"location":"Language/C%2B%2B/packages/#eigen3","title":"Eigen3","text":"<pre><code>sudo apt install libeigen3-dev\n</code></pre>"},{"location":"Language/C%2B%2B/packages/#install-assimp","title":"Install ASSIMP","text":"<p>If ASSIMP is not already installed on your system, you will need to install it. On Ubuntu, you can typically install it using the package manager with the following command:</p> <pre><code>sudo apt update\nsudo apt install libassimp-dev\n</code></pre>"},{"location":"Language/C%2B%2B/packages/#_1","title":"Packages","text":"<pre><code>sudo apt update\nsudo apt install libembree-dev\n</code></pre> <pre><code>sudo apt update\nsudo apt install libopencv-dev\n</code></pre> <pre><code>sudo apt update\nsudo apt install libglfw3-dev\n</code></pre> <pre><code>sudo apt update\nsudo apt install libgtk-3-dev\nsudo apt install nvidia-cuda-toolkit\nsudo apt install libxxf86vm-dev\nsudo apt install ffmpeg libavdevice-dev\n</code></pre>"},{"location":"Language/C%2B%2B/syntax/","title":"Basic","text":"<ul> <li>\"a\"-&gt;string, 'a'-&gt;char</li> </ul>"},{"location":"Language/C%2B%2B/syntax/#value-range","title":"Value Range","text":""},{"location":"Language/C%2B%2B/syntax/#_1","title":"\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b","text":"\u7c7b\u578b \u6700\u5c0f\u503c \u6700\u5927\u503c \u5907\u6ce8 <code>char</code> -128 127 \u81f3\u5c11 8 \u4f4d <code>short</code> -32,768 32,767 \u81f3\u5c11 16 \u4f4d <code>int</code> -2,147,483,648 2,147,483,647 \u901a\u5e38\u662f 32 \u4f4d <code>long</code> -2,147,483,648 2,147,483,647 \u81f3\u5c11 32 \u4f4d\uff0c\u4f46\u53ef\u80fd\u66f4\u957f <code>long long</code> -9,223,372,036,854,775,808 9,223,372,036,854,775,807 \u81f3\u5c11 64 \u4f4d"},{"location":"Language/C%2B%2B/syntax/#_2","title":"\u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\uff08\u975e\u8d1f\u6570\uff09","text":"\u7c7b\u578b \u6700\u5c0f\u503c \u6700\u5927\u503c \u5907\u6ce8 <code>unsigned char</code> 0 255 \u81f3\u5c11 8 \u4f4d <code>unsigned short</code> 0 65,535 \u81f3\u5c11 16 \u4f4d <code>unsigned int</code> 0 4,294,967,295 \u901a\u5e38\u662f 32 \u4f4d <code>unsigned long</code> 0 4,294,967,295 \u81f3\u5c11 32 \u4f4d\uff0c\u4f46\u53ef\u80fd\u66f4\u957f <code>unsigned long long</code> 0 18,446,744,073,709,551,615 \u81f3\u5c11 64 \u4f4d"},{"location":"Language/C%2B%2B/syntax/#uniform-initialization","title":"Uniform Initialization","text":"<pre><code>int a{5}; // \u76f4\u63a5\u521d\u59cb\u5316\nstd::vector&lt;int&gt; v{1, 2, 3}; // \u7edf\u4e00\u521d\u59cb\u5316\n</code></pre>"},{"location":"Language/C%2B%2B/syntax/#auto-keyword-for-type-inference","title":"Auto Keyword for Type Inference","text":"<pre><code>auto x = 42;  // int\nauto y = 42.0;  // double\n</code></pre>"},{"location":"Language/C%2B%2B/syntax/#range-based-for-loops","title":"Range-based For Loops","text":"<pre><code>for (const auto&amp; elem : vec) {\n    // Do something with elem\n}\n</code></pre>"},{"location":"Language/C%2B%2B/syntax/#lambda-expressions","title":"Lambda Expressions","text":"<pre><code>auto add = [](int a, int b) -&gt; int {\n    return a + b;\n};\n</code></pre>"},{"location":"Language/C%2B%2B/syntax/#smart-pointers","title":"Smart Pointers","text":"<pre><code>std::unique_ptr&lt;int&gt; p1(new int(42));\nstd::shared_ptr&lt;int&gt; p2 = std::make_shared&lt;int&gt;(42);\n</code></pre>"},{"location":"Language/C%2B%2B/syntax/#template-functions","title":"Template Functions","text":"<pre><code>template &lt;typename T&gt;\nT getMax(T a, T b) {\n    return (a &gt; b) ? a : b;\n}\n</code></pre>"},{"location":"Language/C%2B%2B/syntax/#move-semantics","title":"Move Semantics","text":"<pre><code>std::vector&lt;int&gt; vec1 = {1, 2, 3};\nstd::vector&lt;int&gt; vec2 = std::move(vec1);  // Moves data from vec1 to vec2\n</code></pre>"},{"location":"Language/C%2B%2B/syntax/#structured-binding-c17","title":"Structured Binding (C++17)","text":"<pre><code>std::pair&lt;int, std::string&gt; p = {1, \"one\"};\nauto [num, word] = p;\n</code></pre>"},{"location":"Language/C%2B%2B/syntax/#variadic-templates","title":"Variadic Templates","text":"<pre><code>template&lt;typename... Args&gt;\nvoid printAll(Args... args) {\n    // Do something\n}\n</code></pre>"},{"location":"Language/C%2B%2B/syntax/#pattern-match","title":"Pattern Match","text":""},{"location":"Language/C%2B%2B/syntax/#switch","title":"Switch","text":"<pre><code>int value = /* some value */;\nswitch (value) {\n    case 1:\n        // do something\n        break;\n    case 2:\n        // do something else\n        break;\n    default:\n        // default case\n        break;\n}\n</code></pre>"},{"location":"Language/C%2B%2B/syntax/#unordered_map","title":"unordered_map","text":"<pre><code>unordered_map&lt;string, function&lt;int(int, int)&gt;&gt; operations = {\n            {\"+\", [](int a, int b) { return a + b; }},\n            {\"-\", [](int a, int b) { return a - b; }},\n            {\"*\", [](int a, int b) { return a * b; }},\n            {\"/\", [](int a, int b) { return a / b; }}\n        };\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/Queue/","title":"Queue","text":"<p>A queue is a container adaptor that provides a FIFO (First-In-First-Out) data structure. The standard library's <code>std::queue</code> is defined in the header <code>&lt;queue&gt;</code>.</p>"},{"location":"Language/C%2B%2B/Data_model/Queue/#initialization","title":"Initialization","text":"<ul> <li>Empty Queue:</li> </ul> <pre><code>std::queue&lt;int&gt; q;\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/Queue/#adding-elements","title":"Adding Elements","text":"<ul> <li>Append to End:</li> </ul> <pre><code>q.push(4);\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/Queue/#access-elements","title":"Access Elements","text":"<ul> <li>Access Next Element:</li> </ul> <pre><code>int next = q.front();\n</code></pre> <ul> <li>Access Last Element:</li> </ul> <pre><code>int last = q.back();\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/Queue/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Next Element:</li> </ul> <pre><code>q.pop();  // Removes the element at the front of the queue\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/Queue/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Queue Size:</li> </ul> <pre><code>size_t size = q.size();\n</code></pre> <ul> <li>Check if Queue is Empty:</li> </ul> <pre><code>bool isEmpty = q.empty();\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/Queue/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Swap Contents:</li> </ul> <pre><code>std::queue&lt;int&gt; q1, q2;\nq1.swap(q2);  // Swaps the contents of q1 and q2\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/Queue/#examples","title":"Examples","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n\nint main() {\n    std::queue&lt;int&gt; q;\n\n    // Adding elements to the queue\n    q.push(1);\n    q.push(2);\n    q.push(3);\n\n    // Accessing elements\n    std::cout &lt;&lt; \"Front: \" &lt;&lt; q.front() &lt;&lt; std::endl; // Outputs 1\n    std::cout &lt;&lt; \"Back: \" &lt;&lt; q.back() &lt;&lt; std::endl;  // Outputs 3\n\n    // Removing elements\n    q.pop();  // Now the front is 2\n\n    // Checking size and if empty\n    std::cout &lt;&lt; \"Size: \" &lt;&lt; q.size() &lt;&lt; std::endl; // Outputs 2\n    std::cout &lt;&lt; \"Is empty: \" &lt;&lt; (q.empty() ? \"Yes\" : \"No\") &lt;&lt; std::endl;  // Outputs No\n\n    return 0;\n}\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/String/","title":"String","text":"<pre><code>#include&lt;string&gt;\n\nstring str = \"Hello, world!\";  //\nstring sub = str.substr(0, 5);  // sub = \"Hello\"\n\n# \u7c7b\u578b\u8f6c\u6362\nint num = 43;\nstring sNum = to_string(num);\n\n# \u67e5\u627e\u5143\u7d20\nString.find()-&gt;size_t\n// \u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6216\u8005\u5b57\u4e32\u7684index\u6216\u8005\u6ca1\u627e\u5230\u5c31\u662fstring::npos\nstd::string myString = \"Hello, world!\";\nsize_t position = myString.find(\"world\");// \u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/map/","title":"Map","text":""},{"location":"Language/C%2B%2B/Data_model/map/#initialization","title":"Initialization","text":"<ul> <li>Empty Map:</li> </ul> <pre><code>std::map&lt;int, std::string&gt; myMap;\n\n    std::unordered_map&lt;int, std::string&gt; myMap = {\n    {1, \"one\"},\n    {2, \"two\"},\n    {3, \"three\"}\n\n};\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/map/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element:</li> </ul> <pre><code>myMap[1] = \"one\";  // Insert key-value pair\n// or\nmyMap.insert(std::make_pair(1, \"one\"));  // Insert key-value pair\n\nmyMap.emplace(1, \"one\"); // create key-value pair directly\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/map/#access-elements","title":"Access Elements","text":"<ul> <li>Access Value by Key:</li> </ul> <pre><code>std::string value = myMap[1];  // Access value by key, returns std::string\n</code></pre> <ul> <li>Find Element:</li> </ul> <pre><code>auto it = myMap.find(1);  // Returns iterator to the element if key exists, otherwise returns myMap.end()\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/map/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Key:</li> </ul> <pre><code>myMap.erase(1);  // Removes element with key 1, returns number of elements removed (size_t)\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/map/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Map Size:</li> </ul> <pre><code>size_t size = myMap.size();  // Returns the number of elements in the map (size_t)\n</code></pre> <ul> <li>Check if Map is Empty:</li> </ul> <pre><code>bool isEmpty = myMap.empty();  // Returns true if the map is empty, otherwise false (bool)\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/map/#iterating-through-map","title":"Iterating through Map","text":"<ul> <li>Using Iterator:</li> </ul> <pre><code>for (auto it = myMap.begin(); it != myMap.end(); ++it) {\n    // it-&gt;first: key\n    // it-&gt;second: value\n}\n</code></pre> <ul> <li>Using Range-based For Loop:</li> </ul> <pre><code>for (const auto&amp; [key, value] : myMap) {\n    // key: key\n    // value: value\n}\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/map/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Map:</li> </ul> <pre><code>myMap.clear();  // Removes all elements from the map\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/set/","title":"Set","text":"<ul> <li>std::set is an associative container that contains a sorted set of unique objects. It is usually implemented as a red-black tree.</li> </ul>"},{"location":"Language/C%2B%2B/Data_model/set/#initialization","title":"Initialization","text":"<ul> <li>Empty Set:</li> </ul> <pre><code>std::set&lt;int&gt; mySet;\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/set/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element (Average case O(log n)):</li> </ul> <pre><code>mySet.insert(10); // Insert an element\n</code></pre> <ul> <li>Emplace Element (Average case O(log n)):</li> </ul> <pre><code>mySet.emplace(10); // Construct and insert element\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/set/#access-elements","title":"Access Elements","text":"<ul> <li>Find Element (Average case O(log n)):</li> </ul> <pre><code>auto it = mySet.find(10); // Returns iterator to the element if found, otherwise returns mySet.end()\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/set/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Value (Average case O(log n)):</li> </ul> <pre><code>mySet.erase(10); // Erases element with value 10\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/set/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Set Size (O(1)):</li> </ul> <pre><code>size_t size = mySet.size(); // Returns the number of elements\n</code></pre> <ul> <li>Check if Set is Empty (O(1)):</li> </ul> <pre><code>bool isEmpty = mySet.empty(); // Returns true if set is empty, otherwise false\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/set/#iterating-through-set","title":"Iterating through Set","text":"<ul> <li>Using Iterator (O(n)):</li> </ul> <pre><code>for (auto it = mySet.begin(); it != mySet.end(); ++it) {\n    // Access the element as *it\n}\n</code></pre> <ul> <li>Using Range-based For Loop (O(n)):</li> </ul> <pre><code>for (const auto&amp; elem : mySet) {\n    // Access the element directly as elem\n}\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/set/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Set (O(n)):</li> </ul> <pre><code>mySet.clear(); // Removes all elements from the set\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/stack/","title":"Stack","text":"<pre><code>#include &lt;stack&gt;\nint main() {\n    std::stack&lt;int&gt; myStack;\n\n    // \u6dfb\u52a0\u5143\u7d20\u5230\u6808\u4e2d\n    myStack.push(1);\n    // \u8f93\u51fa\u6808\u9876\u5143\u7d20\n myStack.top();\n\n    // \u79fb\u9664\u6808\u9876\u5143\u7d20\n    myStack.pop();\n\n    // \u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a\n    myStack.empty()\n\n}\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_map/","title":"unordered_map","text":""},{"location":"Language/C%2B%2B/Data_model/unordered_map/#initialization","title":"Initialization","text":"<ul> <li>Empty Unordered Map:</li> </ul> <pre><code>std::unordered_map&lt;int, std::string&gt; myMap;  // Empty unordered_map\n</code></pre> <ul> <li>brace initialization:</li> </ul> <pre><code>std::unordered_map&lt;int, std::string&gt; myMap = {\n    {1, \"one\"},\n    {2, \"two\"},\n    {3, \"three\"}\n};\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_map/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element:</li> </ul> <pre><code>myMap[1] = \"one\";  // Insert key-value pair\n// or\nmyMap.insert(std::make_pair(1, \"one\"));  // Insert key-value pair\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_map/#access-elements","title":"Access Elements","text":"<ul> <li>Access Value by Key:</li> </ul> <pre><code>std::string value = myMap[1];  // Access value by key, returns std::string\n</code></pre> <ul> <li>Find Element:</li> </ul> <pre><code>auto it = myMap.find(1);\n// Returns iterator to the element if key exists, otherwise returns myMap.end()\nit-&gt;first  # key\nit-&gt;second # value\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_map/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Key:</li> </ul> <pre><code>myMap.erase(1);  // Removes element with key 1, returns number of elements removed (size_t)\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_map/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Map Size:</li> </ul> <pre><code>size_t size = myMap.size();  // Returns the number of elements in the map (size_t)\n</code></pre> <ul> <li>Check if Map is Empty:</li> </ul> <pre><code>bool isEmpty = myMap.empty();  // Returns true if the map is empty, otherwise false (bool)\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_map/#iterating-through-unordered-map","title":"Iterating through Unordered Map","text":"<ul> <li>Using Iterator:</li> </ul> <pre><code>for (auto it = myMap.begin(); it != myMap.end(); ++it) {\n    // it-&gt;first: key\n    // it-&gt;second: value\n}\n</code></pre> <ul> <li>Using Range-based For Loop:</li> </ul> <pre><code>for (const auto&amp; [key, value] : myMap) {\n    // key: key\n    // value: value\n}\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_map/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Map:</li> </ul> <pre><code>myMap.clear();  // Removes all elements from the map\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_set/","title":"unordered_set","text":"<ul> <li>std::unordered_set is an associative container that contains a set of unique objects. Search, insertion, and removal operations have average constant-time complexity.</li> </ul>"},{"location":"Language/C%2B%2B/Data_model/unordered_set/#initialization","title":"Initialization","text":"<ul> <li>Empty Unordered Set:</li> </ul> <pre><code>std::unordered_set&lt;int&gt; myUnorderedSet;\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_set/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element (Average case O(1)):</li> </ul> <pre><code>myUnorderedSet.insert(10); // Insert an element\n</code></pre> <ul> <li>Emplace Element (Average case O(1)):</li> </ul> <pre><code>myUnorderedSet.emplace(10); // Construct and insert element\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_set/#access-elements","title":"Access Elements","text":"<ul> <li>Find Element (Average case O(1)):</li> </ul> <pre><code>auto it = myUnorderedSet.find(10);\n// Returns iterator to the element if found, otherwise returns myUnorderedSet.end()\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_set/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Value (Average case O(1)):</li> </ul> <pre><code>myUnorderedSet.erase(10); // Erases element with value 10\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_set/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Unordered Set Size (O(1)):</li> </ul> <pre><code>size_t size = myUnorderedSet.size(); // Returns the number of elements\n</code></pre> <ul> <li>Check if Unordered Set is Empty (O(1)):</li> </ul> <pre><code>bool isEmpty = myUnorderedSet.empty(); // Returns true if unordered set is empty, otherwise false\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_set/#iterating-through-unordered-set","title":"Iterating through Unordered Set","text":"<ul> <li>Using Iterator (O(n)):</li> </ul> <pre><code>for (auto it = myUnorderedSet.begin(); it != myUnorderedSet.end(); ++it) {\n    // Access the element as *it\n}\n</code></pre> <ul> <li>Using Range-based For Loop (O(n)):</li> </ul> <pre><code>for (const auto&amp; elem : myUnorderedSet) {\n    // Access the element directly as elem\n}\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/unordered_set/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Unordered Set (O(n)):</li> </ul> <pre><code>myUnorderedSet.clear(); // Removes all elements from the unordered set\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/vector/","title":"Initialization","text":"<ul> <li>Empty Vector:</li> </ul> <pre><code>std::vector&lt;int&gt; vec;\n</code></pre> <ul> <li>Pre-allocate Size:</li> </ul> <pre><code>std::vector&lt;int&gt; vec(10);  // Contains 10 elements, all initialized to 0\n</code></pre> <ul> <li>Pre-allocate Size with Value:</li> </ul> <pre><code>std::vector&lt;int&gt; vec(10, 1);  // Contains 10 elements, all initialized to 1\n</code></pre> <ul> <li>Initialize from Array:</li> </ul> <pre><code>int arr[] = {1, 2, 3};\nstd::vector&lt;int&gt; vec(arr, arr + sizeof(arr) / sizeof(int));\n</code></pre> <ul> <li>Initialize from Another Vector:</li> </ul> <pre><code>std::vector&lt;int&gt; vec2(vec);\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/vector/#adding-elements","title":"Adding Elements","text":"<ul> <li>Append to End:</li> </ul> <pre><code>vec.push_back(4);\n</code></pre> <ul> <li>Insert at Beginning:</li> </ul> <pre><code>vec.insert(vec.begin(), 4);\n</code></pre> <ul> <li>Insert at Specific Position:</li> </ul> <pre><code>vec.insert(vec.begin() + 1, 4);\n</code></pre> <ul> <li>append vector</li> </ul> <pre><code>vec.insert(vec.end(),vec_2.begin(),vec_2.end())\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/vector/#access-elements","title":"Access Elements","text":"<ul> <li>Access Last Element:</li> </ul> <pre><code>int last = vec.back();\n</code></pre> <ul> <li>Access First Element:</li> </ul> <pre><code>int first = vec.front();\n</code></pre> <ul> <li>Access i-th Element (0-based):</li> </ul> <pre><code>int elem = vec[i];\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/vector/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Last Element:</li> </ul> <pre><code>vec.pop_back();    -&gt;void\n</code></pre> <ul> <li>Remove i-th Element:</li> </ul> <pre><code>vec.erase(vec.begin() + i);\n</code></pre> <ul> <li>Remove a Range of Elements:</li> </ul> <pre><code>vec.erase(vec.begin() + i, vec.begin() + j);  // Removes elements from i to j-1\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/vector/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Vector Size:</li> </ul> <pre><code>size_t size = vec.size();\n</code></pre> <ul> <li>Check if Vector is Empty:</li> </ul> <pre><code>bool isEmpty = vec.empty();\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/vector/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Vector:</li> </ul> <pre><code>vec.clear();\n</code></pre> <ul> <li>Resize Vector:</li> </ul> <pre><code>vec.resize(20);  // New elements are initialized to 0\n</code></pre> <ul> <li>Find Element Position:</li> </ul> <pre><code>std::find(vec.begin(), vec.end(), value) != vec.end()\n</code></pre> <ul> <li>Sort Vector:</li> </ul> <pre><code>std::sort(vec.begin(), vec.end());\n</code></pre>"},{"location":"Language/C%2B%2B/Data_model/vector/#examples","title":"Examples","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nint main() {\n    std::vector&lt;int&gt; vec = {3, 1, 4, 1, 5, 9, 2, 6, 5};\n\n    // \u4f7f\u7528 std::min_element \u548c lambda \u51fd\u6570\u627e\u5230\u6700\u5c0f\u6b63\u6574\u6570\n    auto it = std::min_element(vec.begin(), vec.end(), [](int a, int b) {\n        if (a &lt;= 0) return false;\n        if (b &lt;= 0) return true;\n        return a &lt; b;\n    });\n\n    if (it != vec.end() &amp;&amp; *it &gt; 0) {\n        std::cout &lt;&lt; \"\u6700\u5c0f\u6b63\u6574\u6570\u662f\uff1a\" &lt;&lt; *it &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"\u6ca1\u6709\u627e\u5230\u6b63\u6574\u6570\" &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nint main() {\n    std::vector&lt;int&gt; vec = {1, 2, 2, 3, 4, 4, 5};\n\n    // \u5148\u6392\u5e8f\n    std::sort(vec.begin(), vec.end());\n\n    // \u4f7f\u7528 std::unique \u53bb\u91cd\n    auto last = std::unique(vec.begin(), vec.end());\n\n    // \u5220\u9664\u591a\u4f59\u5143\u7d20\n    vec.erase(last, vec.end());\n\n    // \u8f93\u51fa\u53bb\u91cd\u540e\u7684\u5411\u91cf\n    for (const auto&amp; elem : vec) {\n        std::cout &lt;&lt; elem &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"Language/C%2B%2B/STL/Pointer/","title":"Pointer","text":""},{"location":"Language/C%2B%2B/STL/Pointer/#c","title":"C++ \u667a\u80fd\u6307\u9488\u7b80\u4ecb","text":"<p>\u667a\u80fd\u6307\u9488\u662f\u73b0\u4ee3 C++ \u4e2d\u7528\u4e8e\u81ea\u52a8\u7ba1\u7406\u5185\u5b58\u7684\u5bf9\u8c61\uff0c\u901a\u8fc7\u5c01\u88c5\u539f\u59cb\u6307\u9488\uff0c\u5b83\u4eec\u5e2e\u52a9\u7a0b\u5e8f\u5458\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\u5e76\u63d0\u4f9b\u5f02\u5e38\u5b89\u5168\u3002C++11 \u6807\u51c6\u5f15\u5165\u4e86\u51e0\u79cd\u667a\u80fd\u6307\u9488\u7c7b\u578b\uff0c\u4f7f\u5f97\u8d44\u6e90\u7ba1\u7406\u66f4\u52a0\u7b80\u5355\u548c\u5b89\u5168\u3002</p>"},{"location":"Language/C%2B%2B/STL/Pointer/#_1","title":"\u667a\u80fd\u6307\u9488\u7c7b\u578b","text":"<ol> <li> <p><code>std::unique_ptr</code></p> </li> <li> <p>\u7279\u6027\uff1a\u63d0\u4f9b\u5bf9\u5185\u5b58\u7684\u72ec\u5360\u6240\u6709\u6743\uff0c\u5373\u540c\u4e00\u65f6\u95f4\u5185\u53ea\u6709\u4e00\u4e2a <code>std::unique_ptr</code> \u53ef\u4ee5\u62e5\u6709\u8d44\u6e90\u3002</p> </li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u9700\u8981\u660e\u786e\u5355\u4e00\u6240\u6709\u6743\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u5728\u51fd\u6570\u5185\u90e8\u521b\u5efa\u4e34\u65f6\u5bf9\u8c61\u3002</li> <li>\u4e0d\u53ef\u590d\u5236\uff1a\u53ea\u80fd\u79fb\u52a8\uff0c\u786e\u4fdd\u6240\u6709\u6743\u7684\u552f\u4e00\u6027\u3002</li> <li> <p>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</p> </li> <li> <p><code>std::shared_ptr</code></p> </li> <li> <p>\u7279\u6027\uff1a\u652f\u6301\u591a\u91cd\u6240\u6709\u6743\u6982\u5ff5\uff0c\u5373\u591a\u4e2a <code>std::shared_ptr</code> \u5bf9\u8c61\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u8d44\u6e90\u3002</p> </li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u5bf9\u8c61\u751f\u547d\u5468\u671f\u9700\u8981\u7531\u591a\u4e2a\u6240\u6709\u8005\u5171\u540c\u7ba1\u7406\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u5728\u591a\u4e2a\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002</li> <li> <p>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</p> </li> <li> <p><code>std::weak_ptr</code></p> </li> <li>\u7279\u6027\uff1a\u63d0\u4f9b\u4e00\u79cd\u975e\u62e5\u6709\u6027\u7684\u667a\u80fd\u6307\u9488\uff0c\u7528\u6765\u89c2\u5bdf <code>std::shared_ptr</code>\uff0c\u4f46\u4e0d\u5f71\u54cd\u5176\u5f15\u7528\u8ba1\u6570\u3002</li> <li>\u5178\u578b\u7528\u9014\uff1a\u7528\u4e8e\u89e3\u51b3 <code>std::shared_ptr</code> \u53ef\u80fd\u5bfc\u81f4\u7684\u5faa\u73af\u5f15\u7528\u95ee\u9898\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</li> </ol> <pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n\nclass Child;\nclass Parent;\n\nclass Parent : public std::enable_shared_from_this&lt;Parent&gt; {\npublic:\n    std::shared_ptr&lt;Child&gt; child;\n    ~Parent() { std::cout &lt;&lt; \"Parent destroyed\\n\"; }\n\n    void setChild(std::shared_ptr&lt;Child&gt; c) {\n        child = c;\n        child-&gt;setParent(shared_from_this());  // \u4f7f\u7528 shared_from_this() \u83b7\u53d6\u5f53\u524d\u5bf9\u8c61\u7684 shared_ptr\n    }\n};\n\nclass Child {\npublic:\n    std::weak_ptr&lt;Parent&gt; parent;  // \u4f7f\u7528 weak_ptr \u907f\u514d\u5faa\u73af\u5f15\u7528\n    ~Child() { std::cout &lt;&lt; \"Child destroyed\\n\"; }\n\n    void setParent(std::shared_ptr&lt;Parent&gt; p) {\n        parent = p;  // \u8bbe\u7f6e parent \u4e3a\u4f20\u5165\u7684 shared_ptr\n    }\n};\n\nint main() {\n    std::shared_ptr&lt;Parent&gt; p = std::make_shared&lt;Parent&gt;();\n    std::shared_ptr&lt;Child&gt; c = std::make_shared&lt;Child&gt;();\n    p-&gt;setChild(c);\n\n    std::cout &lt;&lt; \"Parent use count: \" &lt;&lt; p.use_count() &lt;&lt; std::endl;  // \u8f93\u51fa\u4f1a\u662f 2\uff0c\u56e0\u4e3a child \u4e5f\u6301\u6709 parent \u7684 shared_ptr\n    std::cout &lt;&lt; \"Child use count: \" &lt;&lt; c.use_count() &lt;&lt; std::endl;   // \u8f93\u51fa 1\n}\n</code></pre>"},{"location":"Language/C%2B%2B/STL/Pointer/#_2","title":"\u521b\u5efa\u548c\u4f7f\u7528\u667a\u80fd\u6307\u9488","text":"<ul> <li><code>std::make_shared</code></li> <li>\u63cf\u8ff0\uff1a\u7528\u4e8e\u6784\u9020 <code>std::shared_ptr</code> \u7684\u4f18\u9009\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u5728\u5355\u4e00\u64cd\u4f5c\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u63d0\u9ad8\u6548\u7387\u5e76\u51cf\u5c11\u5f02\u5e38\u98ce\u9669\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</li> <li><code>std::make_unique</code></li> <li>\u63cf\u8ff0\uff1a\u7528\u4e8e\u6784\u9020 <code>std::unique_ptr</code> \u7684\u65b9\u6cd5\u3002\u7c7b\u4f3c\u4e8e <code>std::make_shared</code>\uff0c\u4f46\u4e13\u4e3a <code>std::unique_ptr</code> \u8bbe\u8ba1\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++14\u3002</li> <li><code>shared_from_this</code></li> <li>\u63cf\u8ff0\uff1a\u5f53\u7c7b\u7ee7\u627f\u81ea <code>std::enable_shared_from_this</code> \u65f6\uff0c\u4f60\u53ef\u4ee5\u5b89\u5168\u5730\u5728\u7c7b\u5185\u90e8\u83b7\u53d6\u4e00\u4e2a\u6307\u5411\u81ea\u5df1\u7684 <code>std::shared_ptr</code>\u3002</li> <li>\u5f15\u5165\u7248\u672c\uff1aC++11\u3002</li> </ul> <p><code>shared_from_this()</code> \u53ea\u80fd\u5728 <code>std::shared_ptr</code> \u5df2\u7ecf\u62e5\u6709\u8be5\u5bf9\u8c61\u65f6\u624d\u80fd\u5b89\u5168\u8c03\u7528\u3002\u5982\u679c\u5728\u4efb\u4f55 <code>std::shared_ptr</code> \u62e5\u6709\u5bf9\u8c61\u4e4b\u524d\u8c03\u7528\u5b83\uff0c\u7a0b\u5e8f\u5c06\u629b\u51fa <code>std::bad_weak_ptr</code> \u5f02\u5e38\u3002</p>"},{"location":"Language/C%2B%2B/STL/Pointer/#_3","title":"\u4ee3\u7801\u793a\u4f8b","text":"<pre><code>#include &lt;memory&gt;\n#include &lt;iostream&gt;\n\nclass MyClass : public std::enable_shared_from_this&lt;MyClass&gt; {\npublic:\n    void show() {\n        auto sharedPtr = shared_from_this();\n        std::cout &lt;&lt; \"MyClass instance has \" &lt;&lt; sharedPtr.use_count() &lt;&lt; \" references\\n\";\n    }\n};\n\nint main() {\n    auto myObject = std::make_shared&lt;MyClass&gt;();\n    myObject-&gt;show();  // \u663e\u793a\u5f15\u7528\u8ba1\u6570\n}\n</code></pre>"},{"location":"Language/C%2B%2B/STL/Queue/","title":"Queue","text":"<p>A queue is a container adaptor that provides a FIFO (First-In-First-Out) data structure. The standard library's <code>std::queue</code> is defined in the header <code>&lt;queue&gt;</code>.</p>"},{"location":"Language/C%2B%2B/STL/Queue/#initialization","title":"Initialization","text":"<ul> <li>Empty Queue:</li> </ul> <pre><code>std::queue&lt;int&gt; q;\n</code></pre>"},{"location":"Language/C%2B%2B/STL/Queue/#adding-elements","title":"Adding Elements","text":"<ul> <li>Append to End:</li> </ul> <pre><code>q.push(4);\n</code></pre>"},{"location":"Language/C%2B%2B/STL/Queue/#access-elements","title":"Access Elements","text":"<ul> <li>Access Next Element:</li> </ul> <pre><code>int next = q.front();\n</code></pre> <ul> <li>Access Last Element:</li> </ul> <pre><code>int last = q.back();\n</code></pre>"},{"location":"Language/C%2B%2B/STL/Queue/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Next Element:</li> </ul> <pre><code>q.pop();  // Removes the element at the front of the queue\n</code></pre>"},{"location":"Language/C%2B%2B/STL/Queue/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Queue Size:</li> </ul> <pre><code>size_t size = q.size();\n</code></pre> <ul> <li>Check if Queue is Empty:</li> </ul> <pre><code>bool isEmpty = q.empty();\n</code></pre>"},{"location":"Language/C%2B%2B/STL/Queue/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Swap Contents:</li> </ul> <pre><code>std::queue&lt;int&gt; q1, q2;\nq1.swap(q2);  // Swaps the contents of q1 and q2\n</code></pre>"},{"location":"Language/C%2B%2B/STL/Queue/#examples","title":"Examples","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\n\nint main() {\n    std::queue&lt;int&gt; q;\n\n    // Adding elements to the queue\n    q.push(1);\n    q.push(2);\n    q.push(3);\n\n    // Accessing elements\n    std::cout &lt;&lt; \"Front: \" &lt;&lt; q.front() &lt;&lt; std::endl; // Outputs 1\n    std::cout &lt;&lt; \"Back: \" &lt;&lt; q.back() &lt;&lt; std::endl;  // Outputs 3\n\n    // Removing elements\n    q.pop();  // Now the front is 2\n\n    // Checking size and if empty\n    std::cout &lt;&lt; \"Size: \" &lt;&lt; q.size() &lt;&lt; std::endl; // Outputs 2\n    std::cout &lt;&lt; \"Is empty: \" &lt;&lt; (q.empty() ? \"Yes\" : \"No\") &lt;&lt; std::endl;  // Outputs No\n\n    return 0;\n}\n</code></pre>"},{"location":"Language/C%2B%2B/STL/String/","title":"String","text":"<pre><code>#include&lt;string&gt;\n\nstring str = \"Hello, world!\";  //\nstring sub = str.substr(0, 5);  // sub = \"Hello\"\n\n# \u7c7b\u578b\u8f6c\u6362\nint num = 43;\nstring sNum = to_string(num);\n\n# \u67e5\u627e\u5143\u7d20\nString.find()-&gt;size_t\n// \u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u6216\u8005\u5b57\u4e32\u7684index\u6216\u8005\u6ca1\u627e\u5230\u5c31\u662fstring::npos\nstd::string myString = \"Hello, world!\";\nsize_t position = myString.find(\"world\");// \u65e0\u7b26\u53f7\u6574\u6570\u7c7b\u578b\n</code></pre>"},{"location":"Language/C%2B%2B/STL/algorithm/","title":"Algorithm","text":""},{"location":"Language/C%2B%2B/STL/algorithm/#reverse","title":"Reverse","text":"<pre><code>#include &lt;algorithm&gt; // for std::reverse\n#include &lt;string&gt;\n\nint main() {\n    std::string str = \"Hello\";\n    std::reverse(str.begin(), str.end());\n    std::cout &lt;&lt; str &lt;&lt; std::endl;  // \u8f93\u51fa \"olleH\"\n</code></pre>"},{"location":"Language/C%2B%2B/STL/algorithm/#char-digit-to-int","title":"Char Digit to Int","text":"<pre><code>#include &lt;string&gt;\nint main() {\n    std::string digit_char = \"42\";\n    int num_1 = std::stoi(digit_char);\n    long num_2 = std::stol(digit_char);\n    long long num_3 = std::stoll(digit_char);\n\n    // single char\n char digitChar = '4';\n int digit = digitChar - '0';\n    return 0;\n}\n</code></pre>"},{"location":"Language/C%2B%2B/STL/map/","title":"Map","text":""},{"location":"Language/C%2B%2B/STL/map/#initialization","title":"Initialization","text":"<ul> <li>Empty Map:</li> </ul> <pre><code>std::map&lt;int, std::string&gt; myMap;\n\n    std::unordered_map&lt;int, std::string&gt; myMap = {\n    {1, \"one\"},\n    {2, \"two\"},\n    {3, \"three\"}\n\n};\n</code></pre>"},{"location":"Language/C%2B%2B/STL/map/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element:</li> </ul> <pre><code>myMap[1] = \"one\";  // Insert key-value pair\n// or\nmyMap.insert(std::make_pair(1, \"one\"));  // Insert key-value pair\n\nmyMap.emplace(1, \"one\"); // create key-value pair directly\n</code></pre>"},{"location":"Language/C%2B%2B/STL/map/#access-elements","title":"Access Elements","text":"<ul> <li>Access Value by Key:</li> </ul> <pre><code>std::string value = myMap[1];  // Access value by key, returns std::string\n</code></pre> <ul> <li>Find Element:</li> </ul> <pre><code>auto it = myMap.find(1);  // Returns iterator to the element if key exists, otherwise returns myMap.end()\n</code></pre>"},{"location":"Language/C%2B%2B/STL/map/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Key:</li> </ul> <pre><code>myMap.erase(1);  // Removes element with key 1, returns number of elements removed (size_t)\n</code></pre>"},{"location":"Language/C%2B%2B/STL/map/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Map Size:</li> </ul> <pre><code>size_t size = myMap.size();  // Returns the number of elements in the map (size_t)\n</code></pre> <ul> <li>Check if Map is Empty:</li> </ul> <pre><code>bool isEmpty = myMap.empty();  // Returns true if the map is empty, otherwise false (bool)\n</code></pre>"},{"location":"Language/C%2B%2B/STL/map/#iterating-through-map","title":"Iterating through Map","text":"<ul> <li>Using Iterator:</li> </ul> <pre><code>for (auto it = myMap.begin(); it != myMap.end(); ++it) {\n    // it-&gt;first: key\n    // it-&gt;second: value\n}\n</code></pre> <ul> <li>Using Range-based For Loop:</li> </ul> <pre><code>for (const auto&amp; [key, value] : myMap) {\n    // key: key\n    // value: value\n}\n</code></pre>"},{"location":"Language/C%2B%2B/STL/map/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Map:</li> </ul> <pre><code>myMap.clear();  // Removes all elements from the map\n</code></pre>"},{"location":"Language/C%2B%2B/STL/set/","title":"Set","text":"<ul> <li>std::set is an associative container that contains a sorted set of unique objects. It is usually implemented as a red-black tree.</li> </ul>"},{"location":"Language/C%2B%2B/STL/set/#initialization","title":"Initialization","text":"<ul> <li>Empty Set:</li> </ul> <pre><code>std::set&lt;int&gt; mySet;\n</code></pre>"},{"location":"Language/C%2B%2B/STL/set/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element (Average case O(log n)):</li> </ul> <pre><code>mySet.insert(10); // Insert an element\n</code></pre> <ul> <li>Emplace Element (Average case O(log n)):</li> </ul> <pre><code>mySet.emplace(10); // Construct and insert element\n</code></pre>"},{"location":"Language/C%2B%2B/STL/set/#access-elements","title":"Access Elements","text":"<ul> <li>Find Element (Average case O(log n)):</li> </ul> <pre><code>auto it = mySet.find(10); // Returns iterator to the element if found, otherwise returns mySet.end()\n</code></pre>"},{"location":"Language/C%2B%2B/STL/set/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Value (Average case O(log n)):</li> </ul> <pre><code>mySet.erase(10); // Erases element with value 10\n</code></pre>"},{"location":"Language/C%2B%2B/STL/set/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Set Size (O(1)):</li> </ul> <pre><code>size_t size = mySet.size(); // Returns the number of elements\n</code></pre> <ul> <li>Check if Set is Empty (O(1)):</li> </ul> <pre><code>bool isEmpty = mySet.empty(); // Returns true if set is empty, otherwise false\n</code></pre>"},{"location":"Language/C%2B%2B/STL/set/#iterating-through-set","title":"Iterating through Set","text":"<ul> <li>Using Iterator (O(n)):</li> </ul> <pre><code>for (auto it = mySet.begin(); it != mySet.end(); ++it) {\n    // Access the element as *it\n}\n</code></pre> <ul> <li>Using Range-based For Loop (O(n)):</li> </ul> <pre><code>for (const auto&amp; elem : mySet) {\n    // Access the element directly as elem\n}\n</code></pre>"},{"location":"Language/C%2B%2B/STL/set/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Set (O(n)):</li> </ul> <pre><code>mySet.clear(); // Removes all elements from the set\n</code></pre>"},{"location":"Language/C%2B%2B/STL/stack/","title":"Stack","text":"<pre><code>#include &lt;stack&gt;\nint main() {\n    std::stack&lt;int&gt; myStack;\n\n    // \u6dfb\u52a0\u5143\u7d20\u5230\u6808\u4e2d\n    myStack.push(1);\n    // \u8f93\u51fa\u6808\u9876\u5143\u7d20\n myStack.top();\n\n    // \u79fb\u9664\u6808\u9876\u5143\u7d20\n    myStack.pop();\n\n    // \u68c0\u67e5\u6808\u662f\u5426\u4e3a\u7a7a\n    myStack.empty()\n\n}\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_map/","title":"unordered_map","text":""},{"location":"Language/C%2B%2B/STL/unordered_map/#initialization","title":"Initialization","text":"<ul> <li>Empty Unordered Map:</li> </ul> <pre><code>std::unordered_map&lt;int, std::string&gt; myMap;  // Empty unordered_map\n</code></pre> <ul> <li>brace initialization:</li> </ul> <pre><code>std::unordered_map&lt;int, std::string&gt; myMap = {\n    {1, \"one\"},\n    {2, \"two\"},\n    {3, \"three\"}\n};\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_map/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element:</li> </ul> <pre><code>myMap[1] = \"one\";  // Insert key-value pair\n// or\nmyMap.insert(std::make_pair(1, \"one\"));  // Insert key-value pair\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_map/#access-elements","title":"Access Elements","text":"<ul> <li>Access Value by Key:</li> </ul> <pre><code>std::string value = myMap[1];  // Access value by key, returns std::string\n</code></pre> <ul> <li>Find Element:</li> </ul> <pre><code>auto it = myMap.find(1);\n// Returns iterator to the element if key exists, otherwise returns myMap.end()\nit-&gt;first  # key\nit-&gt;second # value\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_map/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Key:</li> </ul> <pre><code>myMap.erase(1);  // Removes element with key 1, returns number of elements removed (size_t)\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_map/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Map Size:</li> </ul> <pre><code>size_t size = myMap.size();  // Returns the number of elements in the map (size_t)\n</code></pre> <ul> <li>Check if Map is Empty:</li> </ul> <pre><code>bool isEmpty = myMap.empty();  // Returns true if the map is empty, otherwise false (bool)\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_map/#iterating-through-unordered-map","title":"Iterating through Unordered Map","text":"<ul> <li>Using Iterator:</li> </ul> <pre><code>for (auto it = myMap.begin(); it != myMap.end(); ++it) {\n    // it-&gt;first: key\n    // it-&gt;second: value\n}\n</code></pre> <ul> <li>Using Range-based For Loop:</li> </ul> <pre><code>for (const auto&amp; [key, value] : myMap) {\n    // key: key\n    // value: value\n}\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_map/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Map:</li> </ul> <pre><code>myMap.clear();  // Removes all elements from the map\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_set/","title":"unordered_set","text":"<ul> <li>std::unordered_set is an associative container that contains a set of unique objects. Search, insertion, and removal operations have average constant-time complexity.</li> </ul>"},{"location":"Language/C%2B%2B/STL/unordered_set/#initialization","title":"Initialization","text":"<ul> <li>Empty Unordered Set:</li> </ul> <pre><code>std::unordered_set&lt;int&gt; myUnorderedSet;\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_set/#insert-elements","title":"Insert Elements","text":"<ul> <li>Insert Single Element (Average case O(1)):</li> </ul> <pre><code>myUnorderedSet.insert(10); // Insert an element\n</code></pre> <ul> <li>Emplace Element (Average case O(1)):</li> </ul> <pre><code>myUnorderedSet.emplace(10); // Construct and insert element\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_set/#access-elements","title":"Access Elements","text":"<ul> <li>Find Element (Average case O(1)):</li> </ul> <pre><code>auto it = myUnorderedSet.find(10);\n// Returns iterator to the element if found, otherwise returns myUnorderedSet.end()\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_set/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Element by Value (Average case O(1)):</li> </ul> <pre><code>myUnorderedSet.erase(10); // Erases element with value 10\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_set/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Unordered Set Size (O(1)):</li> </ul> <pre><code>size_t size = myUnorderedSet.size(); // Returns the number of elements\n</code></pre> <ul> <li>Check if Unordered Set is Empty (O(1)):</li> </ul> <pre><code>bool isEmpty = myUnorderedSet.empty(); // Returns true if unordered set is empty, otherwise false\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_set/#iterating-through-unordered-set","title":"Iterating through Unordered Set","text":"<ul> <li>Using Iterator (O(n)):</li> </ul> <pre><code>for (auto it = myUnorderedSet.begin(); it != myUnorderedSet.end(); ++it) {\n    // Access the element as *it\n}\n</code></pre> <ul> <li>Using Range-based For Loop (O(n)):</li> </ul> <pre><code>for (const auto&amp; elem : myUnorderedSet) {\n    // Access the element directly as elem\n}\n</code></pre>"},{"location":"Language/C%2B%2B/STL/unordered_set/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Unordered Set (O(n)):</li> </ul> <pre><code>myUnorderedSet.clear(); // Removes all elements from the unordered set\n</code></pre>"},{"location":"Language/C%2B%2B/STL/vector/","title":"Initialization","text":"<ul> <li>Empty Vector:</li> </ul> <pre><code>std::vector&lt;int&gt; vec;\n</code></pre> <ul> <li>Pre-allocate Size:</li> </ul> <pre><code>std::vector&lt;int&gt; vec(10);  // Contains 10 elements, all initialized to 0\n</code></pre> <ul> <li>Pre-allocate Size with Value:</li> </ul> <pre><code>std::vector&lt;int&gt; vec(10, 1);  // Contains 10 elements, all initialized to 1\n</code></pre> <ul> <li>Initialize from Array:</li> </ul> <pre><code>int arr[] = {1, 2, 3};\nstd::vector&lt;int&gt; vec(arr, arr + sizeof(arr) / sizeof(int));\n</code></pre> <ul> <li>Initialize from Another Vector:</li> </ul> <pre><code>std::vector&lt;int&gt; vec2(vec);\n</code></pre>"},{"location":"Language/C%2B%2B/STL/vector/#adding-elements","title":"Adding Elements","text":"<ul> <li>Append to End:</li> </ul> <pre><code>vec.push_back(4);\n</code></pre> <ul> <li>Insert at Beginning:</li> </ul> <pre><code>vec.insert(vec.begin(), 4);\n</code></pre> <ul> <li>Insert at Specific Position:</li> </ul> <pre><code>vec.insert(vec.begin() + 1, 4);\n</code></pre> <ul> <li>append vector</li> </ul> <pre><code>vec.insert(vec.end(),vec_2.begin(),vec_2.end())\n</code></pre>"},{"location":"Language/C%2B%2B/STL/vector/#access-elements","title":"Access Elements","text":"<ul> <li>Access Last Element:</li> </ul> <pre><code>int last = vec.back();\n</code></pre> <ul> <li>Access First Element:</li> </ul> <pre><code>int first = vec.front();\n</code></pre> <ul> <li>Access i-th Element (0-based):</li> </ul> <pre><code>int elem = vec[i];\n</code></pre>"},{"location":"Language/C%2B%2B/STL/vector/#removing-elements","title":"Removing Elements","text":"<ul> <li>Remove Last Element:</li> </ul> <pre><code>vec.pop_back();    -&gt;void\n</code></pre> <ul> <li>Remove i-th Element:</li> </ul> <pre><code>vec.erase(vec.begin() + i);\n</code></pre> <ul> <li>Remove a Range of Elements:</li> </ul> <pre><code>vec.erase(vec.begin() + i, vec.begin() + j);  // Removes elements from i to j-1\n</code></pre>"},{"location":"Language/C%2B%2B/STL/vector/#query-attributes","title":"Query Attributes","text":"<ul> <li>Get Vector Size:</li> </ul> <pre><code>size_t size = vec.size();\n</code></pre> <ul> <li>Check if Vector is Empty:</li> </ul> <pre><code>bool isEmpty = vec.empty();\n</code></pre>"},{"location":"Language/C%2B%2B/STL/vector/#other-common-operations","title":"Other Common Operations","text":"<ul> <li>Clear Vector:</li> </ul> <pre><code>vec.clear();\n</code></pre> <ul> <li>Resize Vector:</li> </ul> <pre><code>vec.resize(20);  // New elements are initialized to 0\n</code></pre> <ul> <li>Find Element Position:</li> </ul> <pre><code>std::find(vec.begin(), vec.end(), value) != vec.end()\n</code></pre> <ul> <li>Sort Vector:</li> </ul> <pre><code>std::sort(vec.begin(), vec.end());\n</code></pre>"},{"location":"Language/C%2B%2B/STL/vector/#examples","title":"Examples","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nint main() {\n    std::vector&lt;int&gt; vec = {3, 1, 4, 1, 5, 9, 2, 6, 5};\n\n    // \u4f7f\u7528 std::min_element \u548c lambda \u51fd\u6570\u627e\u5230\u6700\u5c0f\u6b63\u6574\u6570\n    auto it = std::min_element(vec.begin(), vec.end(), [](int a, int b) {\n        if (a &lt;= 0) return false;\n        if (b &lt;= 0) return true;\n        return a &lt; b;\n    });\n\n    if (it != vec.end() &amp;&amp; *it &gt; 0) {\n        std::cout &lt;&lt; \"\u6700\u5c0f\u6b63\u6574\u6570\u662f\uff1a\" &lt;&lt; *it &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"\u6ca1\u6709\u627e\u5230\u6b63\u6574\u6570\" &lt;&lt; std::endl;\n    }\n\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nint main() {\n    std::vector&lt;int&gt; vec = {1, 2, 2, 3, 4, 4, 5};\n\n    // \u5148\u6392\u5e8f\n    std::sort(vec.begin(), vec.end());\n\n    // \u4f7f\u7528 std::unique \u53bb\u91cd\n    auto last = std::unique(vec.begin(), vec.end());\n\n    // \u5220\u9664\u591a\u4f59\u5143\u7d20\n    vec.erase(last, vec.end());\n\n    // \u8f93\u51fa\u53bb\u91cd\u540e\u7684\u5411\u91cf\n    for (const auto&amp; elem : vec) {\n        std::cout &lt;&lt; elem &lt;&lt; \" \";\n    }\n    std::cout &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>"},{"location":"Language/python/Std/Pathlib/","title":"Pathlib","text":"<ul> <li>___ \u73b0\u4ee3\u7684 \u9762\u5411\u5bf9\u8c61 \u7684\u7cfb\u7edf \u8def\u5f84 \u7ba1\u7406\u5e93 ___</li> </ul> <p>classmethod\u00a0Path.cwd() \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u8868\u793a\u5f53\u524d\u76ee\u5f55\u7684\u8def\u5f84\u5bf9\u8c61\uff08\u548c\u00a0<code>os.getcwd()</code>\u00a0\u8fd4\u56de\u7684\u76f8\u540c\uff0c\u4e5f\u662f\u811a\u672c\u88ab\u8c03\u7528\u7684\u5730\u65b9 Path(__file__) \u662f\u811a\u672c\u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\uff0c\u548c\u88ab\u8c03\u7528\u8005\u65e0\u5173</p>"},{"location":"Language/python/Std/Pathlib/#class-attributes","title":"Class Attributes","text":"<ol> <li>PurePath.parents    \u63d0\u4f9b\u8bbf\u95ee\u6b64\u8def\u5f84\u7684\u903b\u8f91\u7956\u5148\u7684\u4e0d\u53ef\u53d8\u5e8f\u5217:</li> </ol> <pre><code>&gt;&gt;&gt; p = Path('some path dir....')\n&gt;&gt;&gt; p.parent == p.parents[0]\nTrue\n&gt;&gt;&gt; p.Parent.parent = p.parents[1]\nTrue\n......\u4ee5\u6b64\u7c7b\u63a8\n\"\"\" python 3.10 \u652f\u6301 \u8d1f\u6570 \u7d22\u5f15\u548c \u5207\u7247\"\"\"\n</code></pre> <ol> <li>PurePath.name</li> <li>\u6700\u540e\u4e00\u4e2a\u7ec4\u4ef6\uff0c\u5373 dir \u6700\u6df1\u5904\u7684 file_name\uff08with suffix\uff09or folder_name</li> </ol> <pre><code>&gt;&gt;&gt; PurePosixPath('my/library/setup.py').name\n'setup.py'\n</code></pre> <ol> <li>PurePath.suffix\u00b6</li> <li>\u5373 PurePath.name \u7684\u540e\u7f00 str</li> </ol> <pre><code>&gt;&gt;&gt; PurePosixPath('my/library/setup.py').suffix\n'.py'\n&gt;&gt;&gt; PurePosixPath('my/library.tar.gz').suffix\n'.gz'\n&gt;&gt;&gt; PurePosixPath('my/library').suffix\n''\n</code></pre>"},{"location":"Language/python/Venv/Poetry/","title":"Poetry","text":"<p>Poetry is a dependency management and packaging tool in Python. It allows you to declare the libraries your project depends on and manage distribution packages.</p>"},{"location":"Language/python/Venv/Poetry/#installation-of-poetry","title":"Installation of Poetry","text":"<p>Reference Documentation: Poetry Official Documentation</p> <pre><code>curl -sSL https://install.python-poetry.org | python3 -\n</code></pre>"},{"location":"Language/python/Venv/Poetry/#setting-environment-variables","title":"Setting Environment Variables","text":"<pre><code>echo 'export PATH=\"$HOME/.local/bin:$PATH\"' &gt;&gt; ~/.zshrc\nsource ~/.zshrc\n</code></pre>"},{"location":"Language/python/Venv/Poetry/#poetry-commands","title":"Poetry Commands","text":""},{"location":"Language/python/Venv/Poetry/#project-initialization","title":"Project Initialization","text":"<p>Use the current directory's <code>pyproject.toml</code> environment:</p> <pre><code>poetry env use python\n</code></pre> <p>Create a new project (with <code>src</code> directory):</p> <pre><code>poetry new --src your_project\n</code></pre> <p>Initialize <code>pyproject.toml</code> file:</p> <pre><code>poetry init\n</code></pre> <p>Set Poetry configuration (e.g., to create virtual environments):</p> <pre><code>poetry config virtualenvs.create true --local\n</code></pre> <p>List Poetry configuration:</p> <pre><code>poetry config --list\n</code></pre> <p>Display environment information:</p> <pre><code>poetry env info\n</code></pre> <p>Create a project named <code>poetry-demo</code> with a <code>src</code> folder:</p> <pre><code>poetry new --src poetry-demo\n</code></pre> <p>Check Poetry version:</p> <pre><code>poetry --version\n</code></pre> <p>Add a Python package (e.g., add <code>request</code>):</p> <pre><code>poetry add request\n</code></pre> <p>Get the path to the virtual environment (for use in IDEs like PyCharm):</p> <pre><code>poetry env info --path\n</code></pre> <p>Export <code>requirements.txt</code> file:</p> <pre><code>poetry export -f requirements.txt --output requirements.txt\n</code></pre> <p>List virtual environments:</p> <pre><code>poetry env list\n</code></pre> <p>Remove a specific virtual environment:</p> <pre><code>poetry env remove &lt;venv_name&gt;\n</code></pre>"},{"location":"Language/python/Venv/Poetry/#dependency-management","title":"Dependency Management","text":""},{"location":"Language/python/Venv/Poetry/#export-requirementstxt","title":"Export <code>requirements.txt</code>","text":"<pre><code>poetry export -f requirements.txt --output requirements.txt\n</code></pre>"},{"location":"Language/python/Venv/Poetry/#install-dependencies-from-requirementstxt","title":"Install Dependencies from <code>requirements.txt</code>","text":"<pre><code>poetry add $(cat requirements.txt)\n</code></pre>"},{"location":"Language/python/Venv/Poetry/#publishing-packages","title":"Publishing Packages","text":""},{"location":"Language/python/Venv/Poetry/#initialize-pypi","title":"Initialize PyPI","text":"<pre><code>poetry config pypi-token.pypi &lt;token&gt;\n</code></pre>"},{"location":"Language/python/Venv/Poetry/#build-and-publish","title":"Build and Publish","text":"<pre><code>Remove-Item -Path 'dist/*' -Recurse -Force\n\npoetry publish --build\n</code></pre>"},{"location":"Language/python/Venv/UV/","title":"Installation","text":"<ul> <li>download</li> </ul> <pre><code>curl -LsSf https://astral.sh/uv/install.sh | sh\n</code></pre> <ul> <li>apply</li> </ul> <pre><code>source $HOME/.cargo/env\n</code></pre> <ul> <li>update</li> </ul> <pre><code>uv self update\n</code></pre> <ul> <li>auto auto completion</li> </ul> <pre><code># Determine your shell (e.g., with `echo $SHELL`), then run one of:\necho 'eval \"$(uv generate-shell-completion bash)\"' &gt;&gt; ~/.bashrc\necho 'eval \"$(uv generate-shell-completion zsh)\"' &gt;&gt; ~/.zshrc\necho 'uv generate-shell-completion fish | source' &gt;&gt; ~/.config/fish/config.fish\necho 'eval (uv generate-shell-completion elvish | slurp)' &gt;&gt; ~/.elvish/rc.elv\n</code></pre> <pre><code># Determine your shell (e.g., with `echo $SHELL`), then run one of:\necho 'eval \"$(uvx --generate-shell-completion bash)\"' &gt;&gt; ~/.bashrc\necho 'eval \"$(uvx --generate-shell-completion zsh)\"' &gt;&gt; ~/.zshrc\necho 'uvx --generate-shell-completion fish | source' &gt;&gt; ~/.config/fish/config.fish\necho 'eval (uvx --generate-shell-completion elvish | slurp)' &gt;&gt; ~/.elvish/rc.elv\n</code></pre> <ul> <li>Uninstallation</li> </ul> <pre><code>uv cache clean\nrm -r \"$(uv python dir)\"\nrm -r \"$(uv tool dir)\"\nrm ~/.cargo/bin/uv ~/.cargo/bin/uvx\n</code></pre>"},{"location":"Language/python/Venv/UV/#python","title":"python","text":"<ul> <li><code>uv</code> will\u00a0automatically fetch Python versions\u00a0as needed \u2014 you don't need to install Python to get started.</li> <li>also it can manage your python envs</li> <li>Once Python is installed, it will be used by\u00a0<code>uv</code>\u00a0commands automatically.</li> <li>activate venv</li> </ul> <pre><code>uv sync\nsource .venv/bin/activate\n</code></pre> <ul> <li>Finding a Python executable</li> </ul> <pre><code>uv python find\n</code></pre>"},{"location":"Language/python/Venv/UV/#tool","title":"Tool","text":"<p>package installed as tool would be manage in a special isolated environment</p> <p><code>uvx</code> == <code>uv tool run</code></p> <pre><code>uvx ruff check\n</code></pre>"},{"location":"Language/python/Venv/UV/#dependencies","title":"Dependencies","text":""},{"location":"Language/python/Venv/UV/#scripts","title":"Scripts","text":"<p>we can add dependencies that are automatically managed by <code>uv</code> on calling:</p> <pre><code>uv add --script &lt;your_script.py&gt; \"&lt;package_a&gt;\" \"&lt;package_b&gt;\"\n</code></pre> <p>then we would find some the declaration of dependencies in your <code>your_script.py</code></p>"},{"location":"Language/python/Venv/UV/#project","title":"Project","text":"<p>we use <code>pyproject.toml</code> to manage python projects' dependencies.</p>"},{"location":"Language/python/Venv/UV/#add","title":"Add","text":"<p>Package name and version would be added into <code>pyproject.toml</code> while calling:</p> <pre><code>uv add requests\n</code></pre> <p>Specify a version constraint</p> <pre><code>uv add 'requests==2.31.0'\n</code></pre> <p>Add a <code>git</code> dependency</p> <pre><code>uv add requests --git https://github.com/psf/requests\n</code></pre> <p>There ate three sort of groups in <code>pyproject.toml</code></p> <ol> <li>we add package to <code>dependencies</code> of <code>[project]</code> normally</li> <li><code>dependency-groups</code> of <code>[tool.uv]</code> contains developments needed</li> <li><code>optional_group</code> of <code>[project.optional-dependencies]</code> contains special group needed</li> </ol> <pre><code># same to uv add --group dev pytest\nuv add pytest --dev\n</code></pre> <pre><code>uv add --group docs mkdocs\n</code></pre>"},{"location":"Language/python/Venv/UV/#sync","title":"Sync","text":"<p>sync all dependencies from <code>pyproject.toml</code></p> <pre><code>uv sync --all-extras --all-groups\n</code></pre> <p><code>sync</code> -&gt;<code>dependencies</code>, <code>--all-extras</code> -&gt; <code>--optional</code>, <code>--all-groups</code> -&gt; <code>dependency-groups</code></p>"},{"location":"Language/python/Venv/UV/#update","title":"Update","text":"<p>update all</p> <pre><code>uv lock --upgrade\n</code></pre> <p>update specified</p> <pre><code>uv lock --upgrade-package requests\n</code></pre> <p>remove</p> <pre><code>uv remove requests\n</code></pre>"},{"location":"Language/python/Venv/conda/","title":"Conda","text":""},{"location":"Language/python/Venv/conda/#install-conda","title":"Install Conda","text":"<ol> <li>install by wget</li> </ol> <pre><code>wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nchmod +x Miniconda3-latest-Linux-x86_64.sh\n./Miniconda3-latest-Linux-x86_64.sh\n# note it may show that conda installed in /root/miniconda3\n</code></pre> <p>remember set no to auto activate in your shell if u use poetry,etc to manage py-env</p> <ol> <li>add <code>/root/miniconda3/bin</code> to <code>PATH</code> in <code>/etc/environment</code></li> </ol> <pre><code>PATH=\"/root/miniconda3/bin:\"\nsource /etc/environment\n# or\nexport PATH=\"/root/miniconda3/bin:$PATH\"\n</code></pre> <ol> <li>test conda</li> </ol> <pre><code>conda info\n</code></pre> <ol> <li>optional, enable auto activate conda</li> </ol> <pre><code>conda config --set auto_activate_base true\n</code></pre> <p>repeat to warn <code>conda init</code> ,try <code>conda init &lt;shell&gt;</code></p>"},{"location":"Language/python/Venv/conda/#channels","title":"Channels","text":"<ul> <li>3rd</li> </ul> <pre><code>conda config --add channels conda-forge\nconda config --set channel_priority strict\n</code></pre> <pre><code>conda config --show channels\n</code></pre> <ul> <li>search</li> </ul> <pre><code>conda search cudnn --channel conda-forge\n</code></pre>"},{"location":"Language/python/Venv/conda/#install-deps","title":"Install Deps","text":"<ul> <li>install from environment.yml</li> </ul> <pre><code>conda env create -f environment.yml\n</code></pre> <ul> <li>output current env deps to environment.yml</li> </ul> <pre><code>conda env export --from-history &gt; environment.yml\n</code></pre> <ul> <li>update from environment.yml <code>--prune</code> for auto update deps</li> </ul> <pre><code>conda env update -f environment.yml\n</code></pre> <ul> <li>install by auto update deps</li> </ul> <pre><code>conda install &lt;package&gt; --update-all\n</code></pre>"},{"location":"Language/python/Venv/conda/#info-check","title":"Info Check","text":"<ul> <li>show conda info</li> </ul> <pre><code>conda info\n</code></pre> <ul> <li>show all conda envs</li> </ul> <pre><code>conda env list\n</code></pre> <ul> <li>current env packages</li> </ul> <pre><code>conda list\n</code></pre> <ul> <li>specified env packages</li> </ul> <pre><code>conda list -n &lt;env&gt;\n</code></pre>"},{"location":"Learning/Reading%20list/","title":"Reading List","text":"<p>Reading List</p> <ul> <li> <p> Implementing the Singleton Pattern in FastAPI for Efficient Database Management | by Dhruv Patel | Sep, 2024 | Medium </p> </li> <li> <p> Python Developers Survey 2023 Results</p> </li> </ul>"},{"location":"Learning/Computer%20Vison/3D/","title":"3D","text":""},{"location":"Learning/Computer%20Vison/3D/#camera","title":"Camera","text":"<p>References: - cameras \u00b7 PyTorch3D - Pinhole Camera - Kornia</p>"},{"location":"Learning/Computer%20Vison/3D/#camera-coordinate-systems","title":"Camera Coordinate Systems","text":"<p>Camera Coordinate System: A reference frame that changes with camera position and orientation. In the camera coordinate system, the origin is at the camera position, with the Z-axis typically aligned with the camera's line of sight, and X and Y axes aligned with the camera's horizontal and vertical axes respectively.</p> <p>World Coordinate System: A fixed, global reference frame used to describe object positions in a scene. In this coordinate system, each object's position is defined relative to a fixed point (world origin).</p>"},{"location":"Learning/Computer%20Vison/3D/#intrinsic-matrix","title":"Intrinsic Matrix","text":"<p>Camera Intrinsic Matrix with Example in Python | by Neeraj Krishna | Towards Data Science</p> <ul> <li><code>fx</code> and <code>fy</code>: Focal lengths in pixels along the image plane's x and y axes. These reflect the lens magnification of the scene. Ideally, for square pixels, <code>fx</code> and <code>fy</code> should be identical, but they may differ slightly due to lens distortion and manufacturing tolerances.</li> <li><code>cx</code> and <code>cy</code>: Principal point coordinates, representing the image coordinate system origin's position on the image plane. Typically assumed to be at the image center but may be offset due to imprecise lens manufacturing and assembly.</li> </ul> <p>The camera intrinsic matrix <code>K</code> is typically represented as:</p> \\[ K=\\begin{bmatrix}f_x&amp;0&amp;c_x\\\\0&amp;f_y&amp;c_y\\\\0&amp;0&amp;1\\end{bmatrix} \\]"},{"location":"Learning/Computer%20Vison/3D/#extrinsic-matrix","title":"Extrinsic Matrix","text":"<p>Camera Extrinsic Matrix with Example in Python | by Neeraj Krishna | Towards Data Science</p> <p>Describes the camera's position and orientation in global space (world coordinate system):</p> \\[ E_t=\\begin{bmatrix}R&amp;\\mathbf{t}\\end{bmatrix} \\] <ul> <li>Rotation: The <code>3x3</code> rotation matrix component enables object rotation around the origin. Rotations can be single-axis (around X, Y, or Z) or any combination thereof.</li> <li>Translation: The <code>Tx</code>, <code>Ty</code>, <code>Tz</code> elements enable object movement along each direction in 3D space.</li> </ul> <p>In practice, a <code>4x4</code> homogeneous transformation matrix is often used to handle both rotation and translation, simplifying calculations through a single matrix multiplication.</p>"},{"location":"Learning/Computer%20Vison/3D/#homogeneous-coordinate-transformation-matrix","title":"Homogeneous Coordinate Transformation Matrix","text":"\\[ \\mathbf{M}_{\\mathrm{c2w}}=\\begin{bmatrix}R&amp;T\\\\0&amp;1\\end{bmatrix} \\] <ul> <li>\\(R\\) (Rotation Matrix): Describes how the camera coordinate system's basis vectors (forward, up, and right directions) are rotated relative to the world coordinate system.</li> <li>\\(T\\) (Translation Vector): Represents the camera coordinate system's origin (camera's optical center) position in the world coordinate system.</li> </ul> <p>This matrix transforms points from camera coordinates to world coordinates through rotation by \\(R\\) followed by translation by \\(T\\).</p> <p>For transforming \\(P_w\\) to \\(P_c\\), we use \\(\\mathbf{M}_{\\mathrm{w2c}}\\), which can be obtained through inverse transformation: \\(\\mathbf{M}_{\\mathrm{w2c}}=\\mathbf{M}_{\\mathrm{c2w}}^{-1}\\)</p> <p>Trajectory files (<code>traj.txt</code>) typically contain <code>4x4</code> transformation matrices per line:</p> <pre><code>R11 R12 R13 Tx\nR21 R22 R23 Ty\nR31 R32 R33 Tz\n 0   0   0  1\n</code></pre>"},{"location":"Learning/Computer%20Vison/3D/#coordinate-transformation-during-imaging","title":"Coordinate Transformation During Imaging","text":"<p>The projection of 3D world coordinates to 2D image plane involves:</p> <ol> <li>World to Camera Coordinates: Using homogeneous extrinsic matrix \\(\\mathbf{M}_\\mathrm{w2c}=\\begin{bmatrix}R&amp;T\\\\0&amp;1\\end{bmatrix}\\), transform \\(P_w=(X_w,Y_w,Z_w,1)^T\\) to \\(\\mathbf{P}_c=(X_c,Y_c,Z_c)^T\\):</li> </ol> \\[ \\mathbf{P}_c=\\mathbf{M}_{\\mathrm{w2c}}\\cdot\\mathbf{P}_w \\] <ol> <li>Camera to Image Plane: Using intrinsic matrix \\(K\\), project \\(\\mathbf{P}_c=(X_c,Y_c,Z_c)^T\\) to image plane pixel \\(P_i=(u,v)\\):</li> </ol> \\[ \\mathbf{P}_i=\\mathbf{K}\\cdot\\begin{bmatrix}X_c\\\\Y_c\\\\Z_c\\end{bmatrix}/Z_c \\]"},{"location":"Learning/Computer%20Vison/Image/","title":"Image","text":""},{"location":"Learning/Computer%20Vison/Image/#image-coordinate-system","title":"Image Coordinate System","text":"<p> \u56fe\u50cf\u5750\u6807\u7cfb\u4e2d\uff1a</p> <ul> <li>\u539f\u70b9\uff080, 0\uff09\u4f4d\u4e8e\u56fe\u50cf\u7684\u5de6\u4e0a\u89d2\u3002</li> <li>__X \u8f74 __ \u7684\u6b63\u65b9\u5411\u662f\u5411\u53f3\uff0c\u8868\u793a\u56fe\u50cf\u7684\u5bbd\u5ea6\uff08w) \u65b9\u5411\u3002</li> <li>__Y \u8f74 __ \u7684\u6b63\u65b9\u5411\u662f\u5411\u4e0b\uff0c\u8868\u793a\u56fe\u50cf\u7684\u9ad8\u5ea6\uff08h\uff09\u65b9\u5411\u3002   reason   \u8fd9\u79cd\u5750\u6807\u7cfb\u7edf\u9009\u62e9\u4e3b\u8981\u662f\u57fa\u4e8e\u56fe\u50cf\u6570\u636e\u5728\u8ba1\u7b97\u673a\u5185\u5b58\u4e2d\u7684\u5b58\u50a8\u65b9\u5f0f\u3002\u5728\u5927\u591a\u6570\u56fe\u50cf\u5904\u7406\u5e93\u548c\u56fe\u5f62\u754c\u9762\u7cfb\u7edf\u4e2d\uff0c\u56fe\u50cf\u6570\u636e\u662f\u6309\u884c\u5b58\u50a8\u7684\uff0c\u6bcf\u884c\u4ece\u5de6\u5230\u53f3\uff0c\u884c\u4ece\u4e0a\u5230\u4e0b\u6392\u5217\u3002\u56e0\u6b64\uff0c\u56fe\u50cf\u7684\u7b2c\u4e00\u4e2a\u50cf\u7d20\uff08\u4f4d\u4e8e\u5de6\u4e0a\u89d2\uff09\u5bf9\u5e94\u4e8e\u5750\u6807\uff080, 0\uff09\u3002</li> </ul>"},{"location":"Learning/Computer%20Vison/Image/#color","title":"Color","text":"<ol> <li>channel first and RGB(red, green, blue)-&gt;pytorch,etc</li> </ol> <pre><code>image.shape = (RGB,Height,Weight)\n</code></pre> <ol> <li>channel not first and BGR(blue,green,red) for opencv,etc</li> </ol> <pre><code>image.shape = (Height,Weight,BGR)\n</code></pre> <ul> <li>normalize</li> </ul> <pre><code>image/255.\n[0,255] -&gt; [0,1.0]\n</code></pre>"},{"location":"Learning/Computer%20Vison/Image/#depth","title":"Depth","text":"<ol> <li>raw depth data from <code>.png</code> with shape(h,w)</li> </ol> <pre><code>depth_image = cv2.imread('depth_image.png', cv2.IMREAD_GRAYSCALE)\n</code></pre> <ol> <li>expand_dims for <code>pytorch</code></li> </ol> <pre><code>depth_tensor.unsqueeze(0)\nshape-&gt;(1,h,w)\n</code></pre>"},{"location":"OS/Bugs/","title":"Bugs","text":""},{"location":"OS/Bugs/#time-wrong-in-dul-system","title":"Time Wrong in Dul System","text":"<p>To change the RTC setting to UTC in Windows, you need to edit the registry: a. Press <code>Win + R</code>, type <code>regedit</code> and press Enter. b. Navigate to <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\TimeZoneInformation</code>. c. Right-click the blank area and select <code>New</code> -&gt; <code>DWORD (32-bit) Value</code>. d. Name the new value <code>RealTimeIsUniversal</code>. e. Double-click the newly created <code>RealTimeIsUniversal</code>, enter <code>1</code> in the Value Data box, and click OK. f. Restart Windows. F. Restart Windows.</p>"},{"location":"OS/Docker/","title":"Docker","text":""},{"location":"OS/Docker/#install-docker-and-compose","title":"Install Docker and - Compose","text":"<pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\\n  $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n# install docker engine\nsudo apt update\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre> <pre><code># tests\nsudo docker run hello-world\ndocker compose version\n</code></pre>"},{"location":"OS/Docker/#use-docker-by-user-without-sudo","title":"Use Docker by User without <code>sudo</code>","text":"<p>Post-installation steps | Docker Docs</p> <pre><code>sudo groupadd docker\nsudo usermod -aG docker $USER\nnewgrp docker\n# tests\ndocker run hello-world\n</code></pre>"},{"location":"OS/Docker/#auto-start","title":"Auto Start","text":"<pre><code>sudo systemctl enable docker.service\nsudo systemctl enable containerd.service\n</code></pre>"},{"location":"OS/Docker/#check-the-running-container","title":"Check the Running Container","text":"<pre><code>docker ps\n</code></pre>"},{"location":"OS/GPU/","title":"GPU","text":""},{"location":"OS/GPU/#ubuntu","title":"Ubuntu","text":""},{"location":"OS/GPU/#install-gpu-driver","title":"Install GPU Driver","text":""},{"location":"OS/GPU/#install-cudatoolkit-and-cudnn","title":"Install <code>cudatoolkit</code> and <code>cudnn</code>","text":"<pre><code>name: your env\nchannels:\n  - conda-forge\n  - nvidia\n  - defaults\ndependencies:\n  - python=3.10\n  - cudatoolkit=11.8\n  - cudnn=8.9.2.26\n</code></pre>"},{"location":"OS/GPU/#gpu-monitor","title":"GPU Monitor","text":"<pre><code>conda install -c conda-forge nvitop\n</code></pre>"},{"location":"OS/Ubuntu/","title":"Ubuntu","text":""},{"location":"OS/Ubuntu/Appearance/","title":"Appearance","text":"<p>theme_manager.sh</p>"},{"location":"OS/Ubuntu/Appearance/#theme","title":"Theme","text":"<p>WhiteSur-gtk-theme</p>"},{"location":"OS/Ubuntu/Appearance/#basic-extension","title":"Basic Extension","text":"<ul> <li>user-themes\u00a0to enable gnome-shell theme (and not just the application theme)</li> <li>dash-to-dock</li> <li>blur-my-shell</li> </ul>"},{"location":"OS/Ubuntu/Appearance/#install","title":"Install","text":"<pre><code>git clone git@github.com:vinceliuice/WhiteSur-gtk-theme.git\ncd WhiteSure-gtk-theme\n</code></pre> <pre><code>./install.sh --libadwaita \\\n-c Dark \\\n-t blue \\\n--gnome-shell \\\n--round\n</code></pre> <p>Note</p> <p>enable solid one in <code>Tweaks</code></p> <p>Flatpak</p> <pre><code>sudo flatpak override --filesystem=xdg-config/gtk-3.0 &amp;&amp; sudo flatpak override --filesystem=xdg-config/gtk-4.0\n</code></pre>"},{"location":"OS/Ubuntu/Appearance/#tweak","title":"Tweak","text":"<p>Firefox , GDE, Flatpak</p> <pre><code>./tweaks.sh -F \\\n-f \\\n--dash-to-dock \\\n--color Dark \\\n--theme blue\n</code></pre> <p>Lock Screen</p> <pre><code>sudo ./tweaks.sh -g -N\n</code></pre>"},{"location":"OS/Ubuntu/Appearance/#icons","title":"Icons","text":"<p>GitHub - vinceliuice/WhiteSur-icon-theme: MacOS Big Sure style icon theme for linux desktops</p> <pre><code>git clone git@github.com:vinceliuice/WhiteSur-icon-theme.git\ncd WhiteSure-icon-theme\n./install.sh -a -b\n</code></pre>"},{"location":"OS/Ubuntu/Appearance/#cursors","title":"Cursors","text":"<pre><code>git clone git@github.com:vinceliuice/McMojave-cursors.git\ncd McMojave-cursors\nsudo ./install.sh\n</code></pre>"},{"location":"OS/Ubuntu/Appearance/#wallpaper","title":"Wallpaper","text":"<p> OneDrive share link</p>"},{"location":"OS/Ubuntu/Gnome/","title":"Gnome","text":""},{"location":"OS/Ubuntu/Gnome/#manager","title":"Manager","text":"<p>Install extensions manager</p> <pre><code>sudo apt install gnome-shell-extension-manager\n</code></pre> <p>Or Install the GNOME Shell Integration browser extension</p> <ol> <li>FireFox</li> <li>Chrome</li> </ol>"},{"location":"OS/Ubuntu/Gnome/#tweaks","title":"Tweaks","text":"<p>tweak your fronts,etc</p> <pre><code>sudo apt install gnome-tweaks\n</code></pre>"},{"location":"OS/Ubuntu/Gnome/#phone","title":"Phone","text":"<pre><code>sudo apt install gnome-shell-extension-gsconnect\n</code></pre>"},{"location":"OS/Ubuntu/Gnome/#accelerate","title":"Accelerate","text":"<ul> <li>Impatience</li> </ul>"},{"location":"OS/Ubuntu/Package/","title":"Package","text":"<p>Repositories official tutorial</p>"},{"location":"OS/Ubuntu/Package/#apt-advanced-package-tool","title":"APT (Advanced Package Tool)","text":""},{"location":"OS/Ubuntu/Package/#basic-usage","title":"Basic Usage","text":"<ul> <li>Update package list: <code>sudo apt update</code></li> <li>Upgrade all packages: <code>sudo apt upgrade</code></li> <li>Install software: <code>sudo apt install &lt;package-name&gt;</code></li> <li>Uninstall software: <code>sudo apt remove &lt;package-name&gt;</code></li> <li>Search for software: <code>apt search &lt;keyword&gt;</code></li> <li>Display package information: <code>apt show &lt;package-name&gt;</code></li> </ul>"},{"location":"OS/Ubuntu/Package/#principles","title":"Principles","text":"<p>APT is an advanced package management tool that uses dpkg as its backend. APT can:</p> <ul> <li>Resolve dependencies</li> <li>Fetch packages from configured sources</li> <li>Perform complex package management operations</li> </ul>"},{"location":"OS/Ubuntu/Package/#ppa-configuration","title":"PPA Configuration","text":"<p>PPA (Personal Package Archive) allows developers and users to create their own software repositories.</p> <ul> <li>Add PPA: <code>sudo add-apt-repository ppa:&lt;repository-name&gt;</code></li> <li>Remove PPA: <code>sudo add-apt-repository --remove ppa:&lt;repository-name&gt;</code></li> </ul> <p>PPA source files are located in the <code>/etc/apt/sources.list.d/</code> directory.</p>"},{"location":"OS/Ubuntu/Package/#add-personal-repo","title":"Add Personal Repo","text":"<p>https://wiki.debian.org/DebianRepository/Format?action=show&amp;redirect=RepositoryFormat Here's how to configure GPG signing in CI:</p> <p>https://wiki.debian.org/DebianRepository/Setup</p> <p>https://wiki.debian.org/DebianRepository/Setup</p> <p>Generate GPG key (locally):</p> <pre><code>gpg --full-generate-key\ngpg --list-secret-keys --keyid-format LONG\ngpg --armor --export-secret-key YOUR_KEY_ID &gt; private.key\ngpg --armor --export YOUR_KEY_ID &gt; public.key\n</code></pre> <p>Add keys as GitHub Secrets: - Go to repo Settings -&gt; Secrets and variables -&gt; Actions -&gt; Repository secrets - Add two secrets     - <code>GPG_PRIVATE_KEY</code>: private key content     - <code>GPG_PASSPHRASE</code>: key passphrase</p> <p>GitHub - AtticusZeller/deb-index</p>"},{"location":"OS/Ubuntu/Package/#flatpak","title":"Flatpak","text":"<p>Flatpak is a system for building and distributing desktop applications.</p>"},{"location":"OS/Ubuntu/Package/#install-flatpak","title":"Install Flatpak","text":"<pre><code>sudo apt install flatpak\n</code></pre>"},{"location":"OS/Ubuntu/Package/#install-the-software-flatpak-plugin","title":"Install the Software Flatpak Plugin","text":"<p>The Flatpak plugin for the Software app makes it possible to install apps without needing the command line. To install, run:</p> <pre><code>sudo apt install gnome-software-plugin-flatpak\n</code></pre> <p>Note</p> <p>the Software app is distributed as a Snap since Ubuntu 20.04 and does not support graphical installation of Flatpak apps. Installing the Flatpak plugin will also install a deb version of Software and result in two Software apps being installed at the same time.</p>"},{"location":"OS/Ubuntu/Package/#add-the-flathub-repository","title":"Add the Flathub Repository","text":"<p>Flathub is the best place to get Flatpak apps. To enable it, run:</p> <pre><code>flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo\n</code></pre>"},{"location":"OS/Ubuntu/Package/#restart","title":"Restart","text":"<p>To complete setup, restart your system. Now all you have to do is install some apps!</p>"},{"location":"OS/Ubuntu/Package/#unsnap","title":"Unsnap","text":"<p>GitHub - popey/unsnap: Quickly migrate from using snap packages to flatpaks</p> <pre><code>git clone git@github.com:popey/unsnap.git\ncd unsnap\n./unsnap auto\n</code></pre>"},{"location":"OS/Ubuntu/Package/#local-management","title":"Local Management","text":"<p>GitHub - flattool/warehouse: A versatile toolbox for viewing flatpak info, managing user data, and batch managing installed flatpaks</p> <pre><code>flatpak install flathub io.github.flattool.Warehouse\n</code></pre>"},{"location":"OS/Ubuntu/Package/#override","title":"Override","text":"<p>global settings if no following with <code>flatpak list</code> got Application ID like<code>com.example.App</code></p> <pre><code>sudo flatpak override --filesystem=home\n</code></pre> <p>BUG</p> <ol> <li>use <code>flatpak-spawn --host --env=TERM=xterm-256color zsh</code> as shell path in <code>pycharm</code> Can't use zsh in terminal \u00b7 Issue #23 \u00b7 flathub/com.jetbrains.IntelliJ-IDEA-Ultimate \u00b7 GitHub</li> </ol>"},{"location":"OS/Ubuntu/Package/#homebrew","title":"Homebrew","text":"<pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre>"},{"location":"OS/Ubuntu/System/","title":"System","text":""},{"location":"OS/Ubuntu/System/#system_1","title":"System","text":""},{"location":"OS/Ubuntu/System/#install","title":"Install","text":"<ol> <li>download <code>ios file</code> Download Ubuntu Desktop | Download | Ubuntu</li> <li>download <code>Flash OS images app</code>balenaEtcher - Flash OS images to SD cards &amp; USB drives</li> <li>let device start by the flashed drivers</li> </ol>"},{"location":"OS/Ubuntu/System/#ignore-lid-switch","title":"Ignore Lid Switch","text":"<pre><code>sudo nano /etc/systemd/logind.conf\n# make sure\nHandleLidSwitch=ignore\nHandleLidSwitchExternalPower=ignore\nHandleLidSwitchDocked=ignore\n# then run\nsudo systemctl restart systemd-logind\n</code></pre>"},{"location":"OS/Ubuntu/System/#usermod","title":"usermod","text":"<p>add into <code>sudo</code> group</p> <pre><code>sudo usermod -aG sudo yourusername\n# check it\ngroups yourusername\n</code></pre>"},{"location":"OS/Ubuntu/System/#sudoers","title":"Sudoers","text":"<p>avoid be asked input passwd call <code>sudo</code> every time</p> <pre><code>sudo visudo\n# fine the line begin with %sudo and replace it\n%sudo ALL=NOPASSWD: ALL\n</code></pre>"},{"location":"OS/Ubuntu/System/#ssh-server","title":"SSH Server","text":""},{"location":"OS/Ubuntu/System/#install-and-enable","title":"Install and Enable","text":"<pre><code>sudo apt update\nsudo apt install openssh-server\nsudo systemctl start ssh\nsudo systemctl enable ssh\nsudo systemctl status ssh\n</code></pre>"},{"location":"OS/Ubuntu/System/#add-ssh-key","title":"Add Ssh Key","text":"<p>copy your key</p> <pre><code>cat ~/.ssh/id_ed25519.pub\n</code></pre> <p>write into ssh server</p> <pre><code>echo \"your key content\" &gt;&gt; ~/.ssh/authorized_keys\n</code></pre>"},{"location":"OS/Ubuntu/System/#add-ssh-configoptional","title":"Add Ssh Config(optional)","text":"<pre><code>code ~/.ssh/config\n</code></pre> <p>write the following into ssh config</p> <pre><code>Host ubuntu-laptop\n    Hostname 192.168.0.107\n    Port 22\n    User root\n</code></pre> <p>we assume <code>192.168.0.107</code> is your ssh server IP which could be found after running <code>ifconfig</code></p>"},{"location":"OS/Ubuntu/System/#connect","title":"Connect","text":"<pre><code># == ssh root@192.168.0.107\nssh ubuntu-laptop\n</code></pre>"},{"location":"OS/Ubuntu/System/#current-user","title":"Current User","text":"<p>```bash whoami <pre><code>## Basic Tools for Desktop\n\n### Browse\n\n#### [FireFox](https://www.omgubuntu.co.uk/2022/04/how-to-install-firefox-deb-apt-ubuntu-22-04)\n\n```bash\nsudo snap remove firefox\n</code></pre></p> <pre><code>sudo install -d -m 0755 /etc/apt/keyrings\nwget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | sudo tee /etc/apt/keyrings/packages.mozilla.org.asc &gt; /dev/null\necho \"deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main\" | sudo tee -a /etc/apt/sources.list.d/mozilla.list &gt; /dev/null\necho '\nPackage: *\nPin: origin packages.mozilla.org\nPin-Priority: 1000\n\nPackage: firefox*\nPin: release o=Ubuntu\nPin-Priority: -1' | sudo tee /etc/apt/preferences.d/mozilla\nsudo apt update &amp;&amp; sudo apt remove FireFox\nsudo apt install firefox\n</code></pre> <p>PWA plugin</p>"},{"location":"OS/Ubuntu/System/#use-eye-protection-mode","title":"Use Eye Protection Mode","text":"<p>setting-&gt; display-&gt; night light</p>"},{"location":"OS/Ubuntu/System/#keyboard","title":"Keyboard","text":"<pre><code>sudo apt-get update\nsudo apt-get install ibus ibus-pinyin ibus-libpinyin\n</code></pre> <p>Warning</p> <p>remember to reboot and add input resources in <code>setting-&gt;keyboard</code></p>"},{"location":"OS/Ubuntu/System/#system-backup","title":"System Backup","text":"<pre><code>sudo apt-get update\nsudo apt-get install timeshift\n</code></pre>"},{"location":"OS/Ubuntu/System/#clipboard","title":"Clipboard","text":"<p>GitHub - Tudmotu/gnome-shell-extension-clipboard-indicator: The most popular clipboard manager for GNOME, with over 1M downloads</p> <p>Clipboard Indicator - GNOME Shell Extensions</p> <p>Custom Shortcuts <code>setting-&gt;Keyboard-&gt;Keyboard Shortcuts-&gt;Custom Shortcuts</code> set as <code>win+alt+v</code></p>"},{"location":"OS/Ubuntu/System/#ocr-to-clipboard","title":"OCR to Clipboard","text":"<p>GitHub - tesseract-ocr/tesseract: Tesseract Open Source OCR Engine (main repository)</p> <pre><code>sudo apt-get update\nsudo apt-get install tesseract-ocr xclip gnome-screenshot\n\ncd DevSpace\ngit clone git@github.com:Atticuszz/scripts.git\nsudo chmod +x ./scripts/ocr_clipboard.sh\n</code></pre> <p>scripts/ocr_clipboard.sh at main \u00b7 Atticuszz/scripts \u00b7 GitHub <code>setting-&gt;keyboard-&gt;shortcuts</code></p> <ul> <li>command :<code>~/DevSpace/ocr_clipboard.sh</code></li> <li>shortcuts : <code>ctrl+win+Q</code></li> </ul>"},{"location":"OS/Ubuntu/System/#gpu-monito","title":"Gpu Monito","text":"<pre><code>conda install -c conda-forge nvtop\n</code></pre>"},{"location":"OS/Ubuntu/System/#fan-mode","title":"Fan Mode","text":"<p>use <code>Legion</code> in windows to set mode</p>"},{"location":"OS/Ubuntu/System/#screenshot","title":"Screenshot","text":"<p>Snipaste Downloads</p> <pre><code>sudo apt-get update\nsudo apt-get install fuse\nchmod +x /home/atticuszz/Downloads/Snipaste-2.8.9-Beta-x86_64.AppImage\n/home/atticuszz/Downloads/Snipaste-2.8.9-Beta-x86_64.AppImage --appimage-extract\n# create desktop app then\nmkdir -p ~/.config/autostart/\ncp ~/Desktop/Snipaste.desktop ~/.config/autostart/\n</code></pre>"},{"location":"OS/Ubuntu/System/#install-targz","title":"Install .tar.gz","text":"<pre><code>tar -xzf filepath\n</code></pre>"},{"location":"OS/Ubuntu/System/#apt-source-change","title":"Apt Source Change","text":"<pre><code>sudo nano /etc/apt/sources.list\nsudo apt update\nsudo apt upgrade\n</code></pre>"},{"location":"OS/Ubuntu/System/#dual-system-extend-disk-for-ubuntu","title":"Dual System Extend Disk for Ubuntu","text":"<p>Windows + Linux(Ubuntu)\u53cc\u7cfb\u7edf\u6269\u5c55Linux\u78c1\u76d8\u7a7a\u95f4_\u53cc\u7cfb\u7edf\u4e0b windows \u4e3a ubuntu \u6269\u5145\u65b0\u7a7a\u95f4 | linux \u6269\u5bb9\u539f\u7406\u4ecb\u7ecd + \u586b\u5751-CSDN\u535a\u5ba2</p>"},{"location":"OS/Ubuntu/System/#increase-swap-space-via-swap-file","title":"Increase Swap Space via Swap File","text":"<p>extend to 16gb for example How to increase swap space? - Ask Ubuntu</p> <p>extend to 16gb for example</p> <pre><code>sudo swapoff -a\nsudo fallocate -l 16G /swapfile\n# if failed fallocate try\nsudo dd if=/dev/zero of=/swapfile bs=1G count=16\n\n# then\nsudo chmod 600 /swapfile\nsudo mkswap /swapfile\nsudo swapon /swapfile\n\n# Make it permanent\necho '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab\n# test it\nswapon --show\n-&gt;\n\u276f swapon --show\n\nNAME      TYPE SIZE USED PRIO\n/swapfile file  16G   0B   -2\n</code></pre>"},{"location":"OS/Ubuntu/System/#zip-file","title":"Zip File","text":"<p>Note:</p> <ul> <li>The <code>-r</code> option stands for \"recursive\" and tells <code>zip</code> to include all files and <code>subfolders</code> in the specified folder.</li> <li>If you want to exclude certain files or folders, you can use the <code>-x</code> option followed by the file or folder name. For example:</li> </ul> <pre><code>zip -r myfolder.zip myfolder -x myfolder/excluded_file.txt\n</code></pre>"},{"location":"OS/Ubuntu/System/#onedrive","title":"OneDrive","text":"<p>onedrive/docs/ubuntu-package-install.md at master \u00b7 abraunegg/onedrive \u00b7 GitHub</p> <p>install</p> <pre><code>sudo apt remove onedrive\nsudo rm /etc/systemd/user/default.target.wants/onedrive.service\nwget -qO - https://download.opensuse.org/repositories/home:/npreining:/debian-ubuntu-onedrive/xUbuntu_24.04/Release.key | gpg --dearmor | sudo tee /usr/share/keyrings/obs-onedrive.gpg &gt; /dev/null\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/obs-onedrive.gpg] https://download.opensuse.org/repositories/home:/npreining:/debian-ubuntu-onedrive/xUbuntu_24.10/ ./\" | sudo tee /etc/apt/sources.list.d/onedrive.list\nsudo apt-get update\nsudo apt install --no-install-recommends --no-install-suggests onedrive\n</code></pre>"},{"location":"OS/Ubuntu/System/#login","title":"Login","text":"<pre><code>onedrive\n</code></pre>"},{"location":"OS/Ubuntu/System/#config","title":"Config","text":"<pre><code>code ~/.config/onedrive\n</code></pre> <p>and fill it with following:</p> <pre><code># sync home\n\nsync_dir = \"~\"\n\n# Skip dot files\n\nskip_dotfiles = \"true\"\n\n# Skip github sync dir\n\nskip_dir = \"DevSpace\"\nskip_dir = \"miniconda3\"\nskip_dir = \"NVIDIA Nsight Compute\"\nskip_dir = \"snap\"\nskip_dir = \"cache\"\nskip_dir = \"temp\"\n\n# upload_only = \"true\"\n\n# https://github.com/abraunegg/onedrive/blob/master/docs/application-config-options.md#monitor_interval\nmonitor_interval = \"600\"\n\nthreads = \"16\"\n</code></pre>"},{"location":"OS/Ubuntu/System/#usage","title":"Usage","text":"<p>once</p> <pre><code>onedrive --sync --verbose\n</code></pre> <p>monitor</p> <pre><code>onedrive --monitor\n</code></pre> <p>monitor as startup</p> <pre><code>...\n</code></pre>"},{"location":"OS/Ubuntu/System/#compatibility-with-curl","title":"Compatibility with curl","text":"<pre><code>brew install curl\necho 'export PATH=\"/home/linuxbrew/.linuxbrew/opt/curl/bin:$PATH\"' &gt;&gt; ~/.zshrc\necho 'export LD_LIBRARY_PATH=\"/home/linuxbrew/.linuxbrew/opt/curl/lib:$LD_LIBRARY_PATH\"' &gt;&gt; ~/.zshrc\n</code></pre>"},{"location":"OS/Ubuntu/System/#zotero","title":"Zotero","text":"<p>GitHub - retorquere/zotero-deb: Packaged versions of Zotero and Juris-M for Debian-based systems</p> <pre><code>wget -qO- https://raw.githubusercontent.com/retorquere/zotero-deb/master/install.sh | sudo bash\nsudo apt update\nsudo apt install zotero\n</code></pre>"},{"location":"OS/Ubuntu/Terminal/","title":"Terminal","text":""},{"location":"OS/Ubuntu/Terminal/#front","title":"Front","text":"<p>preferences--&gt;profiles-&gt;Text</p>"},{"location":"OS/Ubuntu/Terminal/#zsh","title":"Zsh","text":"<p>ZSH + Oh My ZSH! on Windows with WSL - DEV Community </p>"},{"location":"OS/Ubuntu/Terminal/#install-zsh","title":"Install Zsh","text":"<pre><code>sudo apt install zsh\n# install oh my zsh\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n</code></pre>"},{"location":"OS/Ubuntu/Terminal/#install-theme","title":"Install Theme","text":"<pre><code>git clone https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/powerlevel10k\n</code></pre> <p>copy the following theme config into <code>~/.zshrc</code></p> <pre><code># correct the old ZSH_THEME or can not find p10k command\nZSH_THEME=\"powerlevel10k/powerlevel10k\"\nPOWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(history)\nPOWERLEVEL9K_SHORTEN_DIR_LENGTH=1\n\nexport LS_COLORS=\"rs=0:no=00:mi=00:mh=00:ln=01;36:or=01;31:di=01;34:ow=04;01;34:st=34:tw=04;34:pi=01;33:so=01;33:do=01;33:bd=01;33:cd=01;33:su=01;35:sg=01;35:ca=01;35:ex=01;32:\"\n</code></pre> <p>then restart terminal and config themes</p> <pre><code>p10k configure\n</code></pre>"},{"location":"OS/Ubuntu/Terminal/#install-plugins","title":"Install Plugins","text":"<pre><code>git clone https://github.com/zsh-users/zsh-autosuggestions.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\ngit clone https://github.com/Pilaton/OhMyZsh-full-autoupdate.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/ohmyzsh-full-autoupdate\n</code></pre> <p>add plugins config</p> <pre><code>ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor root line)\nZSH_HIGHLIGHT_PATTERNS=('rm -rf *' 'fg=white,bold,bg=red')\n\nplugins=(\n    command-not-found\n    extract\n    deno\n    docker\n    git\n    github\n    gitignore\n    history-substring-search\n    node\n    npm\n    nvm\n    yarn\n    volta\n    vscode\n    sudo\n    web-search\n    z\n    zsh-autosuggestions\n    zsh-syntax-highlighting\n    ohmyzsh-full-autoupdate\n)\n</code></pre> <p>Note</p> <p>plugin config must before the <code>source $ZSH/oh-my-zsh.sh</code></p>"},{"location":"OS/Ubuntu/Terminal/#vscode","title":"Vscode","text":"<p>vs code terminal , Add these properties to the user\u00a0<code>settings.json</code></p> <pre><code>{\n  \"terminal.integrated.fontSize\": 12,\n  \"terminal.integrated.shellIntegration.enabled\": true,\n  \"terminal.integrated.defaultProfile.windows\": \"Git Bash\",\n  \"terminal.integrated.defaultProfile.linux\": \"zsh\"\n}\n</code></pre>"},{"location":"OS/Ubuntu/Terminal/#shortcut","title":"Shortcut","text":""},{"location":"OS/Windows/Package/","title":"Package","text":""},{"location":"OS/Windows/Package/#developer-tools","title":"developer tools","text":"<pre><code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser\nInvoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression\n</code></pre>"},{"location":"OS/Windows/Powershell/","title":"Powershell","text":""},{"location":"OS/Windows/Powershell/#oh-my-posh","title":"Oh My Posh","text":"<pre><code>winget install JanDeDobbeleer.OhMyPosh -s winget\n$env:Path += \";C:\\Users\\user\\AppData\\Local\\Programs\\oh-my-posh\\bin\"\noh-my-posh font install\ncode  $PROFILE\n</code></pre> <pre><code>oh-my-posh init pwsh --config \"$env:POSH_THEMES_PATH\\peru.omp.json\" | Invoke-Expression\nImport-Module PSReadLine\nSet-PSReadLineOption -PredictionSource History\nSet-PSReadLineOption -PredictionViewStyle ListView\nImport-Module Terminal-Icons\n</code></pre> <p>set <code>powershell</code> as default instead of <code>windows powershell</code> set front in config-&gt; default -&gt; appearance</p> <p>GitHub - marticliment/UniGetUI: UniGetUI: The Graphical Interface for your package managers. Could be terribly described as a package manager manager to manage your package managers</p> <pre><code>winget install --exact --id MartiCliment.UniGetUI --source winget\n</code></pre>"},{"location":"OS/Windows/Powershell/#tips","title":"Tips","text":""},{"location":"OS/Windows/Powershell/#kill-the-process-by-pid","title":"kill The Process by PID","text":"<pre><code>taskkill /PID &lt;PID&gt; /F\n</code></pre>"},{"location":"OS/Windows/Powershell/#find-out-the-process-occupied-the-port","title":"Find out the Process Occupied the port","text":"<p>the last line of output is PID</p> <pre><code>netstat -ano | findstr :&lt;port&gt;\n</code></pre>"},{"location":"OS/Windows/Powershell/#find-out-the-process-occupied-the-file","title":"Find out the Process Occupied the file","text":"<p>Sysinternals Suite - Microsoft Apps</p> <pre><code>handle.exe &lt;file path&gt;\n</code></pre>"},{"location":"OS/Windows/Powershell/#get-command-exe-path","title":"Get Command .exe Path","text":"<pre><code>where.exe poetry\n</code></pre> <p><code>-&gt;C:\\Users\\18317\\AppData\\Roaming\\Python\\Scripts\\poetry.exe</code></p>"},{"location":"OS/Windows/Powershell/#add-path","title":"Add Path","text":"<p>admin</p> <pre><code># \u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u8def\u5f84\n$currentPath = [Environment]::GetEnvironmentVariable(\"Path\", [System.EnvironmentVariableTarget]::Machine)\n\n# \u8981\u6dfb\u52a0\u7684\u65b0\u8def\u5f84\n$newPath = \"C:\\Program Files\\xpdf-tools-win-4.05\\bin64\"\n\n# \u68c0\u67e5\u65b0\u8def\u5f84\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e\u7cfb\u7edf\u8def\u5f84\u4e2d\nif ($currentPath -notcontains $newPath) {\n    # \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u6dfb\u52a0\u65b0\u8def\u5f84\n    $updatedPath = $currentPath + \";\" + $newPath\n\n    # \u8bbe\u7f6e\u65b0\u7684\u7cfb\u7edf\u8def\u5f84\n    [Environment]::SetEnvironmentVariable(\"Path\", $updatedPath, [System.EnvironmentVariableTarget]::Machine)\n\n    Write-Output \"Path added successfully.\"\n} else {\n    Write-Output \"Path already exists in the system PATH.\"\n}\n# check path\n# \u8f93\u51fa\u5f53\u524d\u7cfb\u7edf\u8def\u5f84\n[Environment]::GetEnvironmentVariable(\"Path\", [System.EnvironmentVariableTarget]::Machine)\n</code></pre>"},{"location":"Reference/Finding%20and%20managing%20research%20papers%20a%20survey%20of%20tools%20and%20products/","title":"Finding and Managing Research Papers a Survey of Tools and Products","text":"<p>At the end of this post you can find a tl;dr with my suggestions for the most useful tools to improve your workflow with scientific papers.</p> <p>Major update (2020): We have released a tool for visually finding and exploring academic papers. See our launching blog post for Connected Papers!</p> <p>As researchers, especially in (overly) prolific fields like Deep Learning, we often find ourselves overwhelmed by the huge amount of papers to read and keep track of in our work. I think one big reason for this is insufficient use of existing tools and services that aim to make our life easier. Another reason is the lack of a really good product which meets all our needs under one interface, but that is a topic for another post.</p> <p>Lately I\u2019ve been getting into a new subfield of ML and got extremely frustrated with the process of prioritizing, reading and managing the relevant papers\u2026 I ended up looking for tools to help me deal with this overload and want to share with you the products and services that I\u2019ve found. The goal is to improve the workflow and quality of life of anyone who works with scientific papers.</p> <p>I will focus mainly on consumption of papers (as opposed to writing) and cover:</p> <ol> <li>Reference Managers (AKA paper library)</li> <li>Social platforms to share knowledge</li> <li>Automatic paper analysis to gain additional metadata (keywords, relevant datasets, important citations\u2026)</li> </ol>","tags":["scholar"]},{"location":"Reference/Finding%20and%20managing%20research%20papers%20a%20survey%20of%20tools%20and%20products/#reference-managers-aka-paper-library","title":"Reference Managers (AKA Paper library)","text":"<p>These are platforms where you can create and organize lists of all your past and future reading, add personal notes and share with a small group. The libraries are synced to the cloud which means your papers should be available anywhere. Think goodreads, but for papers. Choose one of the following:</p> <ol> <li>Mendeley: It\u2019s not the best looking product, but it has a freemium business model and supports multiple platforms including web, PC, Mac, and mobile. In addition to general paper notes you can annotate and highlight the PDFs directly. You pay for additional cloud storage (necessary after a few hundred papers).</li> <li>Paperpile: paid subscription (no free version), but looks and feels modern. Very easy to import your library there from other services. The library is synced to your own Google Drive, which is a plus. At the moment only works on a chrome browser.</li> <li>Zotero: A freemium and open source implementation where you pay for additional cloud storage. Similar to Mendeley but less versatile.</li> </ol> <p>There are more options, but these are the ones I have tried and they are all fine. If I had to choose one it would be Mendeley for its platform versatility and being freemium.</p> <p></p> <p>Mendeley\u2019s Interface</p>","tags":["scholar"]},{"location":"Reference/Finding%20and%20managing%20research%20papers%20a%20survey%20of%20tools%20and%20products/#arxiv-enhancers","title":"ArXiv Enhancers","text":"<p>ArXiv has been around since 1991, and generally changed very little over the last decade, while the publication volume has increased dramatically [1]. It is natural that today we have different requirements and needs from our primary repository of papers. We want algorithms that perform paper analysis, we want to find code which implements the papers, we want a social layer via which we can share information, and perhaps we don\u2019t want to squint at a double-columned pdf.</p> <p>Searching the internet for existing solutions, I found many such tools:</p>","tags":["scholar"]},{"location":"Reference/Finding%20and%20managing%20research%20papers%20a%20survey%20of%20tools%20and%20products/#social-layers","title":"Social Layers","text":"<ol> <li>Shortscience: A platform for sharing paper summaries; Currently over 1000 summaries and growing. Works for any paper with a DOI (so, more than arXiv).</li> <li>OpenReview: A transparent paper review process which is open to public reviews as well, currently available only for selected conferences such as NIPS and ICLR. In addition to the official reviews, recently many papers there are seeing active conversations with responses from the original authors.</li> <li>Scirate: Adds a like (ehh, \u201cscite\u201d) button over a clone of arXiv. Adds a comment section. Mostly inactive.</li> </ol>","tags":["scholar"]},{"location":"Reference/Finding%20and%20managing%20research%20papers%20a%20survey%20of%20tools%20and%20products/#find-code-implementation-of-papers","title":"Find Code Implementation of Papers","text":"<ol> <li>Papers With Code: Automatically connects papers to github repositories that implement them and sorts by github stars. There can be multiple, unmerged entries for each paper.</li> <li>Github pwc: A minimalistic approach which automatically(?) connects papers to only one code implementation, displayed as a simple table.</li> <li>GitXiv: Collaboratively curated feed of projects. Each project is conveniently presented as arXiv + Github + Links + Discussion. Unfortunately this project is no longer maintained.</li> </ol> <p>Some links from Github pwc</p>","tags":["scholar"]},{"location":"Reference/Finding%20and%20managing%20research%20papers%20a%20survey%20of%20tools%20and%20products/#other","title":"Other","text":"<ol> <li>arXiv-sanity: Gives a makeover to arXiv with exposed abstracts, paper previews and very basic social and library features. A valiant attempt at tying many of the ideas above together, built in spare-time by Andrej Karpathy. The ideas are all there, but in my opinion the implementation isn\u2019t good enough to become a go-to tool for researchers, and the project has not been very active in the past year.</li> <li>arXiv-vanity : Renders academic papers from arXiv as responsive web pages so you don\u2019t have to squint at a PDF.</li> </ol>","tags":["scholar"]},{"location":"Reference/Finding%20and%20managing%20research%20papers%20a%20survey%20of%20tools%20and%20products/#paper-search-and-analysis","title":"Paper search and Analysis","text":"<ol> <li>Google scholar: Today\u2019s go-to place to search for papers, view paper statistics as well as citations and references, set up alerts for new papers by following an author or a paper, and keep a basic library with automatic recommendations.</li> <li>IBM Science Summarizer: Summaries are generated by analyzing the content of papers, as well as their structure, sections, paragraphs, and key terms. It doesn\u2019t always work well, but it\u2019s continually improving and is great for skimming papers quickly.</li> <li>Semantic scholar: Semantic analysis of papers with external material aggregation. Features include: expose citations and references and measure their impact, show paper figures, automatically generate keywords (topics), analyze authors, find additional resources on the internet (e.g. related youtube videos) and suggest recommended papers. A great new effort supported by AI2. Lately they\u2019ve done a small integration with Paperswithcode mentioned above and with arXiv itself (!).</li> </ol> <p>Semantic Scholar: author profile page</p>","tags":["scholar"]},{"location":"Reference/Finding%20and%20managing%20research%20papers%20a%20survey%20of%20tools%20and%20products/#tools-for-authors","title":"Tools for Authors","text":"<ol> <li>Overleaf: Collaborative, online LaTeX editor. Think Google docs for writing papers. Very well implemented.</li> <li>Authorea: A 21st century approach to collaboratively writing papers online, aiming to mostly drop LaTeX in favor of a modern WYSIWYG editor. Supports inline code and data for reproducibility, inline public comments, and other features that make perfect sense.</li> <li>Code ocean: A cloud-based computational reproducibility platform. My understanding is that you upload your research as a Jupyter environment code, run it online and reproduce the same graphs /output that the authors get. Here\u2019s an example (press Run at the top right).</li> </ol>","tags":["scholar"]},{"location":"Reference/Finding%20and%20managing%20research%20papers%20a%20survey%20of%20tools%20and%20products/#tldr-my-recommendations","title":"Tl;dr \u2014 My recommendations","text":"<ul> <li>Manage your reading library: Mendeley</li> <li>Read and write paper reviews: shortscience and openreview</li> <li>Match papers to github repositories: paperswithcode and pwc</li> <li>Paper and author analysis: Semantic scholar</li> <li>Write papers: Overleaf</li> </ul> <p>I hope this post has introduced you to at least one service that will improve your workflow. Please, if you know any helpful tools which haven\u2019t been mentioned in this post, share them below for everyone\u2019s benefit.</p> <p>[1] By October 2016 the submission rate had grown to more than 10,000 per month. https://en.wikipedia.org/wiki/ArXiv,</p> <p></p> <p>arXiv submission by Topic, from their statistics page</p>","tags":["scholar"]},{"location":"Reference/blog/Steph%20Ango/What%20can%20we%20remove/","title":"What Can We Remove","text":"<p>Our bias is to always add more. More rules, more process, more code, more features, more stuff. Interdependencies proliferate, and gradually strangle us. Systems want to grow and grow, but without pruning, they collapse. Slowly, then spectacularly.</p> <p>When a piece of trash drifts across the beach, it is our duty to pick it up so the next person can enjoy a pristine shoreline. When a thousand pieces litter the beach, it is too late. We can only lament the landscape. That\u2019s just how beaches are now.</p> <p>A good system is designed to be periodically cleared of cruft. It has a built-in counterbalance. Without this pressure, our bias drives us to add band-aid after band-aid, until the only choice is to destroy the whole system and start from scratch.</p> <p>Why is it so much easier to add than to remove? Maybe because we attach our identity to what is visible. But there is a difference between the ornamentation that defines our style and the vestigial burdens we carry.</p> <p>Remember those who did the invisible work of removing. Their legacy was not to build a sand castle, but to care for the beautiful beach on which we play.</p>","tags":["blog"]},{"location":"Reference/linux/How%20to%20Monitor%20and%20Test%20the%20Health%20of%20SSD%20in%20Linux/","title":"How to Monitor and Test the Health of SSD in Linux","text":"","tags":["tutorial"]},{"location":"Reference/linux/How%20to%20Monitor%20and%20Test%20the%20Health%20of%20SSD%20in%20Linux/#what-is-smart","title":"What is S.M.A.R.T.?","text":"<p>S.M.A.R.T. \u2013for Self-Monitoring, Analysis, and Reporting Technology\u2014 is a technology embedded in storage devices like hard disk drives or SSDs and whose goal is to monitor their health status.</p> <p>In practice, S.M.A.R.T. will monitor several disk parameters during normal drive operations, like the number of reading errors, the drive startup times or even the environmental condition. Moreover, S.M.A.R.T. and can also perform on-demand tests on the drive.</p> <p>Ideally, S.M.A.R.T. would allow anticipating predictable failures such as those caused by mechanical wearing or degradation of the disk surface, as well as unpredictable failures caused by an unexpected defect. Since drives usually don\u2019t fail abruptly, S.M.A.R.T. gives an option for the operating system or the system administrator to identify soon-to-fail drives so they can be replaced before any data loss occurs.</p> <p></p>","tags":["tutorial"]},{"location":"Reference/linux/How%20to%20Monitor%20and%20Test%20the%20Health%20of%20SSD%20in%20Linux/#what-isnt-smart","title":"What isn\u2019t S.M.A.R.T.?","text":"<p>All that seems wonderful. However, S.M.A.R.T. is not a crystal ball. It cannot predict with 100% accuracy a failure nor, on the other hand, guarantee a drive will not fail without any early warning. At best, S.M.A.R.T. should be used to estimate the likeliness of a failure.</p> <p>Given the statistical nature of failure prediction, the S.M.A.R.T. technology particularly interests company using a large number of storage units, and field studies have been conducted to estimate the accuracy of S.M.A.R.T. reported issues to anticipate disk replacement needs in data centers or server farms.</p> <p>In 2016, Microsoft and The Pennsylvania State University conducted a study focussing on SSDs.</p> <p>According to that study, it appears some S.M.A.R.T. attributes are good indicators of imminent failure. The paper specifically mentions:</p> <p>Reallocated (Realloc) Sector Count:</p> <p>While the underlying technology is radically different, that indicator seems as significant in the SSD world than it was in the hard drive world. Worth mentioning because of wear-leveling algorithms used in SSDs, when several blocks start failing, chances are many more will fail soon.Program/Erase (P/E) fail count:</p> <p>This is a symptom of a problem with the underlying flash hardware where the drive was unable to clear or store data in a block. Because of imperfections in the manufacturing process, few such errors can be anticipated. However, flash memories have a limited number of clear/write cycles. So, once again, a sudden increase in the number of events might indicate the drive has reached its end of life limit, and we can anticipate many more memory cells to fail soon.CRC and Uncorrectable errors (\u201cData Error\u201d):</p> <p>These events can be caused either by storage error or issues with the drive\u2019s internal communication link. This indicator takes into account both corrected errors (thus without any issue reported to the host system) as well as uncorrected errors (thus blocks the drive has reported being unable to read to the host system). In other words, correctable errors are invisible to the host operating system, but they nevertheless impact the drive performances since data has to be corrected by the drive firmware, and a possible sector relocation might occur.SATA downshift count:</p> <p>Because of temporary disturbances, issues with the communication link between the drive and the host, or because of internal drive issues, the SATA interface can switch to a lower signaling rate. Downgrading the link below the nominal link rate has the obvious impact on the observed drive performances. Selecting a lower signaling rate is not uncommon, especially on older drives. So this indicator is most significant when correlated with the presence of one or several of the preceding ones.</p> <p>According to the study, 62% of the failed SSD showed at least one of the above symptoms. However, if you reverse that statement, that also means 38% of the studied SSDs failed without showing any of the above symptoms. The study did not mention though if the failed drives have exhibited any other S.M.A.R.T. reported failure or not. So this cannot be directly compared to the 36% failure-without-prior-notice mentioned for hard drives in the Google paper.</p> <p>The Microsoft/Pennsylvania State University paper does not disclose the exact drive models studied, but according to the authors, most of the drives are coming from the same vendor spanning several generations.</p> <p>The study noticed significant differences in reliability between the different models. For example, the \u201cworst\u201d model studied exhibits a 20% failure rate nine months after the first relocation error and up to 36% failure rate nine months after the first occurrence of data errors. The \u201cworst\u201d model also happens to be the older drive generation studied in the paper.</p> <p>On the other hand, for the same symptoms, the drives belonging to the youngest generation of devices shows only 3% and 20% respectively failure rate for the same errors. It is hard to tell if those figures can be explained by improvements in the drive design and manufacturing process, or if this is simply an effect of drive aging.</p> <p>Most interestingly, and I gave some possible reasons earlier, the paper mentions that, rather than the raw value, this is a sudden increase in the number of reported errors that should be considered as an alarming indicator:</p> <p>\u201c\u201d\u201d There is a higher likelihood of the symptoms preceding SSD failures, with an intense manifestation and rapid progression preventing their survivability beyond a few months \u201c\u201d\u201d</p> <p>____In other words, one occasional S.M.A.R.T. reported error is probably not to be considered as a signal of imminent failure. However, when a healthy SSD starts reporting more and more errors, a short- to mid-term failure has to be anticipated.____</p> <p>But how to know if your hard drive or SSD is healthy? Either to satisfy your curiosity or because you want to start monitoring your drives closely, it is time now to introduce the <code>smartctl</code> monitoring tool:</p>","tags":["tutorial"]},{"location":"Reference/linux/How%20to%20Monitor%20and%20Test%20the%20Health%20of%20SSD%20in%20Linux/#using-smartctl-to-monitor-status-of-your-ssd-in-linux","title":"Using Smartctl to Monitor Status of Your SSD in Linux","text":"<p>There are ways to list disks in Linux but to monitor the S.M.A.R.T. status of your disk, I suggest the <code>smartctl</code> tool, part of the <code>smartmontool</code> package (at least on Debian/Ubuntu).</p> <pre><code>sudo apt install smartmontools\n</code></pre> <p><code>smartctl</code> is a command line tool, but this is perfect, especially if you want to automate data collection, on your servers especially.</p> <p>The first step when using <code>smartctl</code> is to check if your disk has S.M.A.R.T. enabled and is supported by the tool:</p> <pre><code>sh$ sudo smartctl -i /dev/sdb\nsmartctl 6.6 2016-05-31 r4324 [x86_64-linux-4.9.0-6-amd64] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF INFORMATION SECTION ===\nModel Family:     Seagate Momentus 7200.4\nDevice Model:     ST9500420AS\nSerial Number:    5VJAS7FL\nLU WWN Device Id: 5 000c50 02fa0b800\nFirmware Version: D005SDM1\nUser Capacity:    500,107,862,016 bytes [500 GB]\nSector Size:      512 bytes logical/physical\nRotation Rate:    7200 rpm\nDevice is:        In smartctl database [for details use: -P show]\nATA Version is:   ATA8-ACS T13/1699-D revision 4\nSATA Version is:  SATA 2.6, 3.0 Gb/s\nLocal Time is:    Mon Mar 12 15:54:43 2018 CET\nSMART support is: Available - device has SMART capability.\nSMART support is: Enabled\n</code></pre> <p>As you can see, my laptop internal hard drive indeed has S.M.A.R.T. capabilities, and S.M.A.R.T. support is enabled. So, what now about the S.MA.R.T. status? Are there some errors recorded?</p> <p>Reporting \u201call SMART information about the disk\u201d is the job of the <code>-a</code> option:</p> <pre><code>sh$ sudo smartctl -i -a /dev/sdb\nsmartctl 6.6 2016-05-31 r4324 [x86_64-linux-4.9.0-6-amd64] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF INFORMATION SECTION ===\nModel Family:     Seagate Momentus 7200.4\nDevice Model:     ST9500420AS\nSerial Number:    5VJAS7FL\nLU WWN Device Id: 5 000c50 02fa0b800\nFirmware Version: D005SDM1\nUser Capacity:    500,107,862,016 bytes [500 GB]\nSector Size:      512 bytes logical/physical\nRotation Rate:    7200 rpm\nDevice is:        In smartctl database [for details use: -P show]\nATA Version is:   ATA8-ACS T13/1699-D revision 4\nSATA Version is:  SATA 2.6, 3.0 Gb/s\nLocal Time is:    Mon Mar 12 15:56:58 2018 CET\nSMART support is: Available - device has SMART capability.\nSMART support is: Enabled\n\n=== START OF READ SMART DATA SECTION ===\nSMART overall-health self-assessment test result: PASSED\nSee vendor-specific Attribute list for marginal Attributes.\n\nGeneral SMART Values:\nOffline data collection status:  (0x82)    Offline data collection activity\n                    was completed without error.\n                    Auto Offline Data Collection: Enabled.\nSelf-test execution status:      (   0)    The previous self-test routine completed\n                    without error or no self-test has ever\n                    been run.\nTotal time to complete Offline\ndata collection:         (    0) seconds.\nOffline data collection\ncapabilities:              (0x7b) SMART execute Offline immediate.\n                    Auto Offline data collection on/off support.\n                    Suspend Offline collection upon new\n                    command.\n                    Offline surface scan supported.\n                    Self-test supported.\n                    Conveyance Self-test supported.\n                    Selective Self-test supported.\nSMART capabilities:            (0x0003)    Saves SMART data before entering\n                    power-saving mode.\n                    Supports SMART auto save timer.\nError logging capability:        (0x01)    Error logging supported.\n                    General Purpose Logging supported.\nShort self-test routine\nrecommended polling time:      (   2) minutes.\nExtended self-test routine\nrecommended polling time:      ( 110) minutes.\nConveyance self-test routine\nrecommended polling time:      (   3) minutes.\nSCT capabilities:            (0x103f)    SCT Status supported.\n                    SCT Error Recovery Control supported.\n                    SCT Feature Control supported.\n                    SCT Data Table supported.\n\nSMART Attributes Data Structure revision number: 10\nVendor Specific SMART Attributes with Thresholds:\nID# ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  WHEN_FAILED RAW_VALUE\n  1 Raw_Read_Error_Rate     0x000f   111   099   006    Pre-fail  Always       -       29694249\n  3 Spin_Up_Time            0x0003   100   098   085    Pre-fail  Always       -       0\n  4 Start_Stop_Count        0x0032   095   095   020    Old_age   Always       -       5413\n  5 Reallocated_Sector_Ct   0x0033   100   100   036    Pre-fail  Always       -       3\n  7 Seek_Error_Rate         0x000f   071   060   030    Pre-fail  Always       -       51710773327\n  9 Power_On_Hours          0x0032   070   070   000    Old_age   Always       -       26423\n 10 Spin_Retry_Count        0x0013   100   100   097    Pre-fail  Always       -       0\n 12 Power_Cycle_Count       0x0032   096   037   020    Old_age   Always       -       4836\n184 End-to-End_Error        0x0032   100   100   099    Old_age   Always       -       0\n187 Reported_Uncorrect      0x0032   072   072   000    Old_age   Always       -       28\n188 Command_Timeout         0x0032   100   096   000    Old_age   Always       -       4295033738\n189 High_Fly_Writes         0x003a   100   100   000    Old_age   Always       -       0\n190 Airflow_Temperature_Cel 0x0022   056   042   045    Old_age   Always   In_the_past 44 (Min/Max 21/44 #22)\n191 G-Sense_Error_Rate      0x0032   100   100   000    Old_age   Always       -       184\n192 Power-Off_Retract_Count 0x0032   100   100   000    Old_age   Always       -       104\n193 Load_Cycle_Count        0x0032   001   001   000    Old_age   Always       -       395415\n194 Temperature_Celsius     0x0022   044   058   000    Old_age   Always       -       44 (0 13 0 0 0)\n195 Hardware_ECC_Recovered  0x001a   050   045   000    Old_age   Always       -       29694249\n197 Current_Pending_Sector  0x0012   100   100   000    Old_age   Always       -       1\n198 Offline_Uncorrectable   0x0010   100   100   000    Old_age   Offline      -       1\n199 UDMA_CRC_Error_Count    0x003e   200   200   000    Old_age   Always       -       0\n240 Head_Flying_Hours       0x0000   100   253   000    Old_age   Offline      -       25131 (246 202 0)\n241 Total_LBAs_Written      0x0000   100   253   000    Old_age   Offline      -       3028413736\n242 Total_LBAs_Read         0x0000   100   253   000    Old_age   Offline      -       1613088055\n254 Free_Fall_Sensor        0x0032   100   100   000    Old_age   Always       -       0\n\nSMART Error Log Version: 1\nATA Error Count: 3\n    CR = Command Register [HEX]\n    FR = Features Register [HEX]\n    SC = Sector Count Register [HEX]\n    SN = Sector Number Register [HEX]\n    CL = Cylinder Low Register [HEX]\n    CH = Cylinder High Register [HEX]\n    DH = Device/Head Register [HEX]\n    DC = Device Command Register [HEX]\n    ER = Error register [HEX]\n    ST = Status register [HEX]\nPowered_Up_Time is measured from power on, and printed as\nDDd+hh:mm:SS.sss where DD=days, hh=hours, mm=minutes,\nSS=sec, and sss=millisec. It \"wraps\" after 49.710 days.\n\nError 3 occurred at disk power-on lifetime: 21171 hours (882 days + 3 hours)\n  When the command that caused the error occurred, the device was active or idle.\n\n  After command completion occurred, registers were:\n  ER ST SC SN CL CH DH\n  -- -- -- -- -- -- --\n  40 51 00 ff ff ff 0f  Error: UNC at LBA = 0x0fffffff = 268435455\n\n  Commands leading to the command that caused the error were:\n  CR FR SC SN CL CH DH DC   Powered_Up_Time  Command/Feature_Name\n  -- -- -- -- -- -- -- --  ----------------  --------------------\n  60 00 08 ff ff ff 4f 00      00:45:12.580  READ FPDMA QUEUED\n  60 00 08 ff ff ff 4f 00      00:45:12.580  READ FPDMA QUEUED\n  60 00 08 ff ff ff 4f 00      00:45:12.579  READ FPDMA QUEUED\n  60 00 08 ff ff ff 4f 00      00:45:12.571  READ FPDMA QUEUED\n  60 00 20 ff ff ff 4f 00      00:45:12.543  READ FPDMA QUEUED\n\nError 2 occurred at disk power-on lifetime: 21171 hours (882 days + 3 hours)\n  When the command that caused the error occurred, the device was active or idle.\n\n  After command completion occurred, registers were:\n  ER ST SC SN CL CH DH\n  -- -- -- -- -- -- --\n  40 51 00 ff ff ff 0f  Error: UNC at LBA = 0x0fffffff = 268435455\n\n  Commands leading to the command that caused the error were:\n  CR FR SC SN CL CH DH DC   Powered_Up_Time  Command/Feature_Name\n  -- -- -- -- -- -- -- --  ----------------  --------------------\n  60 00 00 ff ff ff 4f 00      00:45:09.456  READ FPDMA QUEUED\n  60 00 00 ff ff ff 4f 00      00:45:09.451  READ FPDMA QUEUED\n  61 00 08 ff ff ff 4f 00      00:45:09.450  WRITE FPDMA QUEUED\n  60 00 00 ff ff ff 4f 00      00:45:08.878  READ FPDMA QUEUED\n  60 00 00 ff ff ff 4f 00      00:45:08.856  READ FPDMA QUEUED\n\nError 1 occurred at disk power-on lifetime: 21131 hours (880 days + 11 hours)\n  When the command that caused the error occurred, the device was active or idle.\n\n  After command completion occurred, registers were:\n  ER ST SC SN CL CH DH\n  -- -- -- -- -- -- --\n  40 51 00 ff ff ff 0f  Error: UNC at LBA = 0x0fffffff = 268435455\n\n  Commands leading to the command that caused the error were:\n  CR FR SC SN CL CH DH DC   Powered_Up_Time  Command/Feature_Name\n  -- -- -- -- -- -- -- --  ----------------  --------------------\n  60 00 00 ff ff ff 4f 00      05:52:18.809  READ FPDMA QUEUED\n  61 00 00 7e fb 31 45 00      05:52:18.806  WRITE FPDMA QUEUED\n  60 00 00 ff ff ff 4f 00      05:52:18.571  READ FPDMA QUEUED\n  ea 00 00 00 00 00 a0 00      05:52:18.529  FLUSH CACHE EXT\n  61 00 08 ff ff ff 4f 00      05:52:18.527  WRITE FPDMA QUEUED\n\nSMART Self-test log structure revision number 1\nNum  Test_Description    Status                  Remaining  LifeTime(hours)  LBA_of_first_error\n# 1  Short offline       Completed without error       00%     10904         -\n# 2  Short offline       Completed without error       00%        12         -\n# 3  Short offline       Completed without error       00%         0         -\n\nSMART Selective self-test log data structure revision number 1\n SPAN  MIN_LBA  MAX_LBA  CURRENT_TEST_STATUS\n    1        0        0  Not_testing\n    2        0        0  Not_testing\n    3        0        0  Not_testing\n    4        0        0  Not_testing\n    5        0        0  Not_testing\nSelective self-test flags (0x0):\n  After scanning selected spans, do NOT read-scan remainder of disk.\nIf Selective self-test is pending on power-up, resume after 0 minute delay.\n</code></pre>","tags":["tutorial"]},{"location":"Reference/linux/How%20to%20Monitor%20and%20Test%20the%20Health%20of%20SSD%20in%20Linux/#understanding-the-output-of-smartctl-command","title":"Understanding the Output of Smartctl Command","text":"<p>That is a lot of information and it is not always easy to interpret those data. The most interesting part is probably the one labeled as \u201cVendor Specific SMART Attributes with Thresholds\u201d. It reports various statistics gathered by the S.M.A.R.T. device and let you compare those value (current or all-time worst) with some vendor-defined threshold.</p> <p>For example, here is how my disk reports relocated sectors:</p> <pre><code>ID# ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  WHEN_FAILED RAW_VALUE\n  5 Reallocated_Sector_Ct   0x0033   100   100   036    Pre-fail  Always       -       3\n</code></pre> <p>You can see this a \u201cpre-fail\u201d attribute. That just means that attribute is corresponding to anomalies. So, if that attribute exceeds the threshold, that could be an indicator of imminent failure. The other category is \u201cOld_age\u201d for attributes corresponding to \u201cnormal wearing\u201d attributes.</p> <p>The last field (here \u201c3\u201d) is corresponding the raw value for that attribute as reported by the drive. Usually, this number has a physical significance. Here, this is the actual number of relocated sectors. However, for other attributes, it could be a temperature in degrees Celsius, a time in hours or minutes, or the number of times the drive has encountered a specific condition.</p> <p>In addition to the raw value, a S.M.A.R.T. enabled drive must report \u201cnormalized\u201d values (fields value, worst and threshold). These values are normalized in the range 1-254 (0-255 for the threshold). The disk firmware performs that normalization using some internal algorithm. Moreover, different manufacturers may normalize the same attribute differently. Most values are reported as a percentage, the higher being the best, but this is not mandatory. When a parameter is lower or equal to the manufacturer supplied threshold, the disk is said to have failed for that attribute. With all the reserves mentioned in the first part of that article, when a \u201cpre-fail\u201d attribute has failed, presumably a disk failure is imminent.</p> <p>As a second example, let\u2019s examine the \u201cseek error rate\u201d:</p> <pre><code>ID# ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  WHEN_FAILED RAW_VALUE\n  7 Seek_Error_Rate         0x000f   071   060   030    Pre-fail  Always       -       51710773327\n</code></pre> <p>Actually, and this is a problem with S.M.A.R.T. reporting, the exact meaning of each value is vendor-specific. In my case, Seagate is using a logarithmic scale to normalize the value. So \u201c71\u201d means roughly one error for 10 million seeks (10 to the 7.1st power). Amusingly enough, the all-time worst was one error for 1 million seeks (10 to the 6.0th power). If I interpret that correctly, that means my disk heads are more accurately positioned now than they were in the past. I did not follow that disk closely, so this analysis is subject to caution. Maybe the drive just needed some running-in period when it was initially commissioned? Unless this is a consequence of mechanical parts wearing, and thus opposing less friction today? In any case, and whatever the reason is, this value is more a performance indicator than a failure early warning. So that does not bother me a lot.</p> <p>Besides that, and three suspects errors recorded about six months ago, that drive appears in surprisingly good conditions (according to S.M.A.R.T.) for a stock laptop drive that was powered on for more than 1100 days (26423 hours):</p> <pre><code>ID# ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  WHEN_FAILED RAW_VALUE\n  9 Power_On_Hours          0x0032   070   070   000    Old_age   Always       -       26423\n</code></pre> <p>Out of curiosity, I ran the same test on a much more recent laptop equipped with an SSD:</p> <pre><code>sh$ sudo smartctl -i /dev/sdb\nsmartctl 6.5 2016-01-24 r4214 [x86_64-linux-4.10.0-32-generic] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF INFORMATION SECTION ===\nDevice Model:     TOSHIBA THNSNK256GVN8\nSerial Number:    17FS131LTNLV\nLU WWN Device Id: 5 00080d 9109b2ceb\nFirmware Version: K8XA4103\nUser Capacity:    256 060 514 304 bytes [256 GB]\nSector Sizes:     512 bytes logical, 4096 bytes physical\nRotation Rate:    Solid State Device\nForm Factor:      M.2\nDevice is:        Not in smartctl database [for details use: -P showall]\nATA Version is:   ACS-3 (minor revision not indicated)\nSATA Version is:  SATA 3.2, 6.0 Gb/s (current: 6.0 Gb/s)\nLocal Time is:    Tue Mar 13 01:03:23 2018 CET\nSMART support is: Available - device has SMART capability.\nSMART support is: Enabled\n</code></pre> <p>The first thing to notice, even if that device is S.M.AR.T. enabled, it is not in the <code>smartctl</code> database. That won\u2019t prevent the tool to gather data from the SSD, but it will not be able to report the exact meaning of the different vendor-specific attributes:</p> <pre><code>sh$ sudo smartctl -a /dev/sdb\nsmartctl 6.5 2016-01-24 r4214 [x86_64-linux-4.10.0-32-generic] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF READ SMART DATA SECTION ===\nSMART overall-health self-assessment test result: PASSED\n\nGeneral SMART Values:\nOffline data collection status:  (0x00)    Offline data collection activity\n                    was never started.\n                    Auto Offline Data Collection: Disabled.\nSelf-test execution status:      (   0)    The previous self-test routine completed\n                    without error or no self-test has ever\n                    been run.\nTotal time to complete Offline\ndata collection:         (  120) seconds.\nOffline data collection\ncapabilities:              (0x5b) SMART execute Offline immediate.\n                    Auto Offline data collection on/off support.\n                    Suspend Offline collection upon new\n                    command.\n                    Offline surface scan supported.\n                    Self-test supported.\n                    No Conveyance Self-test supported.\n                    Selective Self-test supported.\nSMART capabilities:            (0x0003)    Saves SMART data before entering\n                    power-saving mode.\n                    Supports SMART auto save timer.\nError logging capability:        (0x01)    Error logging supported.\n                    General Purpose Logging supported.\nShort self-test routine\nrecommended polling time:      (   2) minutes.\nExtended self-test routine\nrecommended polling time:      (  11) minutes.\nSCT capabilities:            (0x003d)    SCT Status supported.\n                    SCT Error Recovery Control supported.\n                    SCT Feature Control supported.\n                    SCT Data Table supported.\n\nSMART Attributes Data Structure revision number: 16\nVendor Specific SMART Attributes with Thresholds:\nID# ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  WHEN_FAILED RAW_VALUE\n  1 Raw_Read_Error_Rate     0x000a   100   100   000    Old_age   Always       -       0\n  2 Throughput_Performance  0x0005   100   100   050    Pre-fail  Offline      -       0\n  3 Spin_Up_Time            0x0007   100   100   050    Pre-fail  Always       -       0\n  5 Reallocated_Sector_Ct   0x0013   100   100   050    Pre-fail  Always       -       0\n  7 Unknown_SSD_Attribute   0x000b   100   100   050    Pre-fail  Always       -       0\n  8 Unknown_SSD_Attribute   0x0005   100   100   050    Pre-fail  Offline      -       0\n  9 Power_On_Hours          0x0012   100   100   000    Old_age   Always       -       171\n 10 Unknown_SSD_Attribute   0x0013   100   100   050    Pre-fail  Always       -       0\n 12 Power_Cycle_Count       0x0012   100   100   000    Old_age   Always       -       105\n166 Unknown_Attribute       0x0012   100   100   000    Old_age   Always       -       0\n167 Unknown_Attribute       0x0022   100   100   000    Old_age   Always       -       0\n168 Unknown_Attribute       0x0012   100   100   000    Old_age   Always       -       0\n169 Unknown_Attribute       0x0013   100   100   010    Pre-fail  Always       -       100\n170 Unknown_Attribute       0x0013   100   100   010    Pre-fail  Always       -       0\n173 Unknown_Attribute       0x0012   200   200   000    Old_age   Always       -       0\n175 Program_Fail_Count_Chip 0x0013   100   100   010    Pre-fail  Always       -       0\n192 Power-Off_Retract_Count 0x0012   100   100   000    Old_age   Always       -       18\n194 Temperature_Celsius     0x0023   063   032   020    Pre-fail  Always       -       37 (Min/Max 11/68)\n197 Current_Pending_Sector  0x0012   100   100   000    Old_age   Always       -       0\n240 Unknown_SSD_Attribute   0x0013   100   100   050    Pre-fail  Always       -       0\n\nSMART Error Log Version: 1\nNo Errors Logged\n\nSMART Self-test log structure revision number 1\nNo self-tests have been logged.  [To run self-tests, use: smartctl -t]\n\nSMART Selective self-test log data structure revision number 1\n SPAN  MIN_LBA  MAX_LBA  CURRENT_TEST_STATUS\n    1        0        0  Not_testing\n    2        0        0  Not_testing\n    3        0        0  Not_testing\n    4        0        0  Not_testing\n    5        0        0  Not_testing\nSelective self-test flags (0x0):\n  After scanning selected spans, do NOT read-scan remainder of disk.\nIf Selective self-test is pending on power-up, resume after 0 minute delay.\n</code></pre> <p>This is typically the output you can expect for a brand new SSD. Even if, because of the lack of normalization or metainformation for vendor-specific data, many attributes are reported as \u201cUnknown_SSD_Attribute.\u201d I may only hope future versions of <code>smartctl</code> will incorporate data relative to that particular drive model in the tool database, so I could more accurately identify possible issues.</p>","tags":["tutorial"]},{"location":"Reference/linux/How%20to%20Monitor%20and%20Test%20the%20Health%20of%20SSD%20in%20Linux/#test-your-ssd-in-linux-with-smartctl","title":"Test Your SSD in Linux with Smartctl","text":"<p>Until now we have examined the data collected by the drive during its normal operations. However, the S.M.A.R.T. protocol also supports several \u201cself-tests\u201d commands to launch diagnosis on demand.</p> <p>Unless explicitly requested, the self-tests can run during normal disk operations. Since both the test and the host I/O requests will compete for the drive, the disk performances will degrade during the test. The S.M.A.R.T. specification specifies several kinds of self-test. The most important are:</p> <p>Short self-test (<code>-t short</code>)</p> <p>This test will check for the electrical and mechanical performances as well as the read performances of the drive. The short self-test typically only requires few minutes to complete (2 to 10 usually).Extended self-test (<code>-t long</code>)</p> <p>This test takes one or two orders of magnitude longer to complete. Usually, this is a more in-depth version of the short self-test. In addition, that test will scan the entire disk surface for data errors with no time limit. The test duration will be proportional to the disk size.Conveyance self-test (<code>-t conveyance</code>)</p> <p>this test suite is designed as a relatively quick way to check for possible damage incurred during transporting of the device.</p> <p>Here are examples taken from the same disks as above. I let you guess which is which:</p> <pre><code>sh$ sudo smartctl -t short /dev/sdb\nsmartctl 6.5 2016-01-24 r4214 [x86_64-linux-4.10.0-32-generic] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF OFFLINE IMMEDIATE AND SELF-TEST SECTION ===\nSending command: \"Execute SMART Short self-test routine immediately in off-line mode\".\nDrive command \"Execute SMART Short self-test routine immediately in off-line mode\" successful.\nTesting has begun.\nPlease wait 2 minutes for test to complete.\nTest will complete after Mon Mar 12 18:06:17 2018\n\nUse smartctl -X to abort test.\n</code></pre> <p>The test has now being stated. Let\u2019s wait until completion to show the outcome:</p> <pre><code>sh$ sudo sh -c 'sleep 120 &amp;&amp; smartctl -l selftest /dev/sdb'\nsmartctl 6.5 2016-01-24 r4214 [x86_64-linux-4.10.0-32-generic] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF READ SMART DATA SECTION ===\nSMART Self-test log structure revision number 1\nNum  Test_Description    Status                  Remaining  LifeTime(hours)  LBA_of_first_error\n# 1  Short offline       Completed without error       00%       171         -\n</code></pre> <p>Let\u2019s do now the same test on my other disk:</p> <pre><code>sh$ sudo smartctl -t short /dev/sdb\nsmartctl 6.6 2016-05-31 r4324 [x86_64-linux-4.9.0-6-amd64] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF OFFLINE IMMEDIATE AND SELF-TEST SECTION ===\nSending command: \"Execute SMART Short self-test routine immediately in off-line mode\".\nDrive command \"Execute SMART Short self-test routine immediately in off-line mode\" successful.\nTesting has begun.\nPlease wait 2 minutes for test to complete.\nTest will complete after Mon Mar 12 21:59:39 2018\n\nUse smartctl -X to abort test.\n</code></pre> <p>Once again, sleep for two minutes and display the test outcome:</p> <pre><code>sh$ sudo sh -c 'sleep 120 &amp;&amp; smartctl -l selftest /dev/sdb'\nsmartctl 6.6 2016-05-31 r4324 [x86_64-linux-4.9.0-6-amd64] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF READ SMART DATA SECTION ===\nSMART Self-test log structure revision number 1\nNum  Test_Description    Status                  Remaining  LifeTime(hours)  LBA_of_first_error\n# 1  Short offline       Completed without error       00%     26429         -\n# 2  Short offline       Completed without error       00%     10904         -\n# 3  Short offline       Completed without error       00%        12         -\n# 4  Short offline       Completed without error       00%         0         -\n</code></pre> <p>Interestingly, in that case, it appears both the drive and the computer manufacturers seems to have performed some quick tests on the disk (at lifetime 0h and 12h). I was definitely much less concerned with monitoring the drive health myself. So, since I am running some self-tests for that article, let\u2019s start an extended test to so how it goes:</p> <pre><code>sh$ sudo smartctl -t long /dev/sdb\nsmartctl 6.6 2016-05-31 r4324 [x86_64-linux-4.9.0-6-amd64] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF OFFLINE IMMEDIATE AND SELF-TEST SECTION ===\nSending command: \"Execute SMART Extended self-test routine immediately in off-line mode\".\nDrive command \"Execute SMART Extended self-test routine immediately in off-line mode\" successful.\nTesting has begun.\nPlease wait 110 minutes for test to complete.\nTest will complete after Tue Mar 13 00:09:08 2018\n\nUse smartctl -X to abort test.\n</code></pre> <p>Apparently, this time we will have to wait much longer than for the short test. So let\u2019s do it:</p> <pre><code>sh$ sudo bash -c 'sleep $((110*60)) &amp;&amp; smartctl -l selftest /dev/sdb'\n[sudo] password for sylvain:\nsmartctl 6.6 2016-05-31 r4324 [x86_64-linux-4.9.0-6-amd64] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF READ SMART DATA SECTION ===\nSMART Self-test log structure revision number 1\nNum  Test_Description    Status                  Remaining  LifeTime(hours)  LBA_of_first_error\n# 1  Extended offline    Completed: read failure       20%     26430         810665229\n# 2  Short offline       Completed without error       00%     26429         -\n# 3  Short offline       Completed without error       00%     10904         -\n# 4  Short offline       Completed without error       00%        12         -\n# 5  Short offline       Completed without error       00%         0         -\n</code></pre> <p>In that latter case, pay special attention to the different outcomes obtained with the short and extended tests, even if they were performed one right after the other. Well, maybe that disk is not that healthy after all! An important thing to notice is the test will stop after the first read error. So if you want an exhaustive diagnosis of all read errors, you will have to continue the test after each error. I encourage you to take a look at the very well written smartctl(8) manual page for the more information about the options <code>-t select,N-max</code> and <code>-t select,cont</code> for that:</p> <pre><code>sh$ sudo smartctl -t select,810665230-max /dev/sdb\nsmartctl 6.6 2016-05-31 r4324 [x86_64-linux-4.9.0-6-amd64] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF OFFLINE IMMEDIATE AND SELF-TEST SECTION ===\nSending command: \"Execute SMART Selective self-test routine immediately in off-line mode\".\nSPAN         STARTING_LBA           ENDING_LBA\n   0            810665230            976773167\nDrive command \"Execute SMART Selective self-test routine immediately in off-line mode\" successful.\nTesting has begun.\n</code></pre> <pre><code>smartctl 6.6 2016-05-31 r4324 [x86_64-linux-4.9.0-6-amd64] (local build)\nCopyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org\n\n=== START OF READ SMART DATA SECTION ===\nSMART Self-test log structure revision number 1\nNum  Test_Description    Status                  Remaining  LifeTime(hours)  LBA_of_first_error\n# 1  Selective offline   Completed without error       00%     26432         -\n# 2  Extended offline    Completed: read failure       20%     26430         810665229\n# 3  Short offline       Completed without error       00%     26429         -\n# 4  Short offline       Completed without error       00%     10904         -\n# 5  Short offline       Completed without error       00%        12         -\n# 6  Short offline       Completed without error       00%         0         -\n</code></pre>","tags":["tutorial"]},{"location":"Reference/linux/How%20to%20Monitor%20and%20Test%20the%20Health%20of%20SSD%20in%20Linux/#conclusion","title":"Conclusion","text":"<p>Definitely, S.M.A.R.T. reporting is a technology you can add to your tool chest to monitor your servers disk health. In that case, you should also take a look at the S.M.A.R.T. Disk Monitoring Daemon smartd(8) that could help you automate monitoring through syslog reporting.</p> <p>Given the statistical nature of failure prediction, I am a little bit less convinced however that aggressive S.M.A.R.T. monitoring is of great benefit on a personal computer. Finally, don\u2019t forget whatever is its technology, a drive will fail\u2014 and we have seen earlier, in one-third of the case, it will fail without prior notice. So nothing will replace RAID and offline backups to ensure your data integrity!</p>","tags":["tutorial"]},{"location":"Reference/obsidian/Early%20access%20versions%20-%20Obsidian%20Help/","title":"Early Access Versions - Obsidian Help","text":"<p>Get early access to upcoming releases by enabling early access versions. Early access versions are only available to users with a Catalyst license.</p> <p>Early access versions are beta releases. They include new features but may be less stable. Don't enable early access versions if you prefer a more reliable experience.</p> <p>Be aware that community plugin and theme developers receive early access versions at the same time as everyone else. Be patient with developers who need to make updates to support new features.</p>","tags":["clippings"]},{"location":"Reference/obsidian/Early%20access%20versions%20-%20Obsidian%20Help/#enable-early-access-versions-for-desktop","title":"Enable Early Access Versions for Desktop","text":"<p>To receive early access versions as soon as they're available, follow these steps:</p> <ol> <li>Open Settings.</li> <li>In the sidebar, select General.</li> <li>Under Account \u2192 Your Account, select Log in.</li> <li>In Email, enter your email.</li> <li>In Password, enter your password.</li> <li>Once signed in, return to Settings.</li> <li>In the sidebar, select General.</li> <li>Under App, enable Receive early access versions.</li> </ol>","tags":["clippings"]},{"location":"Reference/obsidian/Early%20access%20versions%20-%20Obsidian%20Help/#install-early-access-versions-on-mobile-devices","title":"Install Early Access Versions on Mobile Devices","text":"<p>To find instructions on how to install early access versions on your mobile device, follow these steps:</p> <ol> <li>Join the Obsidian Discord server.</li> <li>Get your Discord badge to access insider channels.</li> <li>Open Discord.</li> <li> <p>In the <code>#insider-mobile-release</code> channel, open Pinned Messages.</p> </li> <li> <p>On desktop, select the pushpin icon in the upper-right corner.</p> </li> <li> <p>On mobile, swipe left and select Pins.</p> </li> <li> <p>Under Pinned Messages, select the installation link for your device:</p> </li> <li> <p>If you're using iOS, open the TestFlight link on your iPhone or iPad.</p> </li> <li>If you're using Android, download and install the APK file.</li> </ol>","tags":["clippings"]},{"location":"Reference/obsidian/Early%20access%20versions%20-%20Obsidian%20Help/#report-issues-and-other-feedback","title":"Report Issues and other Feedback","text":"<p>If you discover an issue in an early access version, consider reporting it to the Obsidian team. Before you report an issue, search the forum or Discord to see if someone has already reported it.</p> <p>To report an issue, use one of the following channels:</p> <ul> <li>On Discord, report the issue in the respective <code>#insider-release</code> channel.</li> <li>In the forum, create a new topic under Bug reports.</li> </ul> <p>When you report an issue, include the build version and the OS you're running it on. You can find the build version under Settings \u2192 About \u2192 App \u2192 Current version.</p>","tags":["clippings"]},{"location":"Reference/obsidian/Early%20access%20versions%20-%20Obsidian%20Help/#switch-back-to-public-versions-on-desktop","title":"Switch back to Public Versions on Desktop","text":"<p>To switch back to using public versions (not early access) on desktop:</p> <ol> <li>Disable early access versions.</li> <li>Open Settings.</li> <li>In the sidebar, select General.</li> <li>Under App, disable Receive early access versions.</li> <li>Close Obsidian.</li> <li> <p>Delete the <code>obsidian-VERSION.asar</code> file, where <code>VERSION</code> is the Obsidian version.</p> </li> <li> <p>Windows: <code>%APPDATA%\\obsidian\\obsidian-VERSION.asar</code></p> </li> <li>Mac: <code>~/Library/Application Support/obsidian/obsidian-VERSION.asar</code></li> <li> <p>Linux: <code>~/.config/obsidian/obsidian-VERSION.asar</code></p> </li> <li> <p>Restart Obsidian.</p> </li> </ol>","tags":["clippings"]},{"location":"Reference/obsidian/Early%20access%20versions%20-%20Obsidian%20Help/#switch-back-to-public-versions-on-mobile","title":"Switch back to Public Versions on Mobile","text":"<p>To switch back to using public versions (not early access) on mobile:</p> <ol> <li>Back up your vault data</li> <li>Uninstall Obsidian</li> <li>Reinstall Obsidian either from the Play Store or Apple App store</li> <li>Restore your vault data from your backups</li> <li>Open Obsidian</li> </ol>","tags":["clippings"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/","title":"My 10+ Obsidian Plugins As a Medium Writer","text":"","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#streamline-your-workflow-top-plugins-for-obsidian-writers","title":"Streamline Your Workflow: Top Plugins for Obsidian Writers","text":"<p>[</p> <p></p> <p>](https://wesley-wei.medium.com/?source=post_page-----6f440119587f--------------------------------)[</p> <p></p> <p>](https://medium.programmerscareer.com/?source=post_page-----6f440119587f--------------------------------)</p> <p></p> <p>Photo by Claudio Schwarz on Unsplash</p> <p>Hello, here is Wesley, Today\u2019s article is about Obsidian Plugins. Without further ado, let\u2019s get started.\ud83d\udcaa</p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#overview","title":"Overview","text":"<p>I highly recommend Richard Feynman\u2019s approach to promoting self-learning through output. First, unreflected output is useless and won\u2019t attract anyone\u2019s attention; second, when you decide to write an article introducing a piece of knowledge, you need to convince yourself that you\u2019ve learned something before wanting to share it with others.</p> <p>Unconsciously, output will become a huge driving force, allowing you to enter the learning state faster and helping you learn more deeply. Moreover, each time you output, it\u2019s like reviewing and refining your understanding of the knowledge for yourself, and sharing it with others through records and exchanges.</p> <p>I\u2019ve been writing on Medium for some time now, and I think there are many good feedback mechanisms here because there are many readers and a paid subscription wall. So why not continue writing on Medium?</p> <p>In my journey as a writer, I\u2019ve used many note-taking software tools, including OneNote and Notion, but they all have their limitations. Now, I\u2019m using Obsidian as my main note-taking tool, which has native support for local files and a wide range of plugins that make me love it even more. This allows me to write on Medium with greater ease, and this article will share some simple tips.</p> <p>This article may be suitable for those who have used Obsidian before. Here, I\u2019ll introduce the plugins I commonly use when writing blog posts or outputting content.</p> <p>The focus of this article is on showcasing the effectiveness of using these plugins, rather than step-by-step instructions. If you think these plugins might be helpful to you, feel free to explore them yourself.</p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#1-content-related","title":"1. Content-related","text":"","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#11-templater","title":"1.1 Templater","text":"<p>This plugin helps me reduce repetitive work when creating new series articles. Whenever I create a new article, I consider using Templater to lower my workload.</p> <p>When you set up the template, it can generate content according to your settings, such as:</p> <p></p> <p>The corresponding Templater code is as follows:</p> <pre><code>---&lt;%*  let title = tp.file.title  if (title.startsWith(\"Untitled\")) {    title = await tp.system.prompt(\"Title\");    await tp.file.rename(title);  }%&gt;title: &lt;%* tR += title %&gt;author: Wesley Weidate: &lt;% tp.file.creation_date() %&gt;tags: stayaheadcategories: efficiency---&lt;% tp.web.random_picture(\"500x500\", \"landscape, nature\") %&gt;&lt;% tp.user.quote(tp) %&gt;\n</code></pre> <p>Note that the quote function is customized according to my own blog format:</p> <pre><code>async function quote(tp) {      str = await tp.web.daily_quote()    let newStr = str.replace(/&gt;\\s\\[!quote]\\s/g, \"\");    newStr = newStr.replace(/&gt;/g, \"\");  newStr = \"{% colorquote success %}\\n\" + newStr;  newStr += \"\\n{% endcolorquote %}\";  return newStr}module.exports = quote;\n</code></pre> <p>If you\u2019re interested in setting up more customized content, you can refer to Templater\u2019s official documentation.</p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#12-auto-link-title","title":"1.2 Auto Link Title","text":"<p>This plugin is very convenient and intuitive, so I directly quoted the official content:</p> <p></p> <p>This plugin automatically fetches the webpage to extract link titles when they\u2019re pasted, creating a markdown link with the correct title set.</p> <p>For example: When pasting https://github.com/zolrath/obsidian-auto-link-title, the plugin fetches the page and retrieves the title, resulting in a paste of: zolrath/obsidian-auto-link-title: Automatically fetch the titles of pasted links</p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#13-copilot","title":"1.3 Copilot","text":"<p>Writing processes can always benefit from AI assistance, such as generating medium article subtitles.</p> <p>For my article: Timer changes in Go 1.23: Enhancing Accuracy and Simplifying Concurrency | by Wesley Wei | Jul, 2024 | Programmer\u2019s Career, I used the Copilot plugin to ask Ollama for its opinion, and it provided the following response:</p> <p></p> <p>If you\u2019re familiar with this content, you\u2019ll find that its response is indeed worth referencing. The corresponding prompt is as follows:</p> <p></p> <p>AI is still rapidly developing, and its potential is limitless. If you input the corresponding prompt and question, it can provide relevant responses. We can fully utilize localized AI to boost productivity. Why not use it?</p> <p>Free AI tools are already very useful today. I welcome you to read my previous article:</p> <p>More about My AI Tools: Welcome to the AI Revolution: My Guide to Essential Tools and Concepts | by Wesley Wei | Jun, 2024 | Programmer\u2019s Career</p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#14-linter","title":"1.4 Linter","text":"<p>This plugin can help us standardize article formatting. I\u2019ve made some customizations, and whenever I trigger the save article shortcut key, this plugin can automatically format my article according to my customized style, as shown below:</p> <p></p> <p>If you\u2019re someone who writes frequently, you should understand what this means: time-saving.</p> <p>When I finish writing an article, all I need to do is input the shortcut key, and the article formatting will be basically done, which will definitely save a lot of time.</p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#2-usage-related","title":"2. Usage-related","text":"","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#21-another-quick-switcher-better-command-palette-omnisearch","title":"2.1 Another Quick Switcher, Better Command Palette, Omnisearch","text":"<p>What I use most often in Another Quick Switcher is \u2014 Recent search. By setting a shortcut key, I can quickly know which articles I\u2019ve recently opened.</p> <p></p> <p>Better Command Palette helps me find commands more easily. Similarly, by setting a shortcut key, I can quickly open the search and use the command.</p> <p></p> <p>Omnisearch performs faster and more detailed searches.</p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#22-excalibrain-excalidraw","title":"2.2 ExcaliBrain, Excalidraw","text":"<p>ExcaliBrain can help me view my articles from various angles and visualize them as images. It also allows me to see relationships between this article and other articles.</p> <p></p> <p>Excalidraw enables me to create diagrams locally, and with ExcaliBrain, I can modify the structure diagram of my article and generate an image that represents the structure I want.</p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#23-style-settings-supercharged-links","title":"2.3 Style Settings, Supercharged Links","text":"<p>Style Settings and Supercharged Links allow me to categorize my articles based on tags and other dimensions, which helps me manage my articles. For example, I set different colors for articles with different tags:</p> <p></p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#24-commander","title":"2.4 Commander","text":"<p>This plugin enables me to customize some frequently used commands. For instance, I can create a command to enter or exit focus mode and place it on the Tab Bar:</p> <p></p> <p></p> <p></p> <p>By clicking on the icon in the top-right corner, I can easily toggle the status bar on or off. Of course, this is just one small example, and there are many more things to explore.</p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#3-tools-related","title":"3. Tools-Related","text":"","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#31-image-auto-upload-plugin","title":"3.1 Image Auto Upload Plugin","text":"<p>This plugin helps us use PicGo to upload images to third-party services, without saving them locally. The uploading process is as follows:</p> <p></p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#32-git","title":"3.2 Git","text":"<p>When I publish my articles on Medium and my blog, I use this plugin to push them to GitHub with one click, then deploy the blog content to my server using GitHub Actions.</p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#33-terminal","title":"3.3 Terminal","text":"<p>We all know that Obsidian\u2019s default files are in Markdown format, but sometimes I need to create other types of files, such as a custom JavaScript file for the Template plugin. This requires me to switch to another window to create these types of files, which is inconvenient and distracts from my workflow.</p> <p>I solved this problem by using the Terminal plugin, which allows us to open a terminal in the same Obsidian instance and create a JavaScript file through the terminal.</p> <p></p> <p>Of course, if you\u2019re familiar with terminals, you\u2019ll understand that it can do many more things.</p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#4-conclusion","title":"4. Conclusion","text":"<p>All plugins can be downloaded through Community plugins, and you can choose the ones that are helpful to you based on the recommendations above.</p> <p></p> <p>I think there are too many plugins on Obsidian, which can be overwhelming. I believe we only need to select the ones that best suit our needs. I hope my recommended plugins include what you\u2019re looking for.</p> <p>The plugins mentioned in this article are all those I\u2019ve accumulated over time while using Obsidian to write slowly. They\u2019re just a small part of the iceberg when it comes to Obsidian plugins, and the usage scenarios are only personal examples. I welcome your comments telling me which plugins you like and how you use them.</p> <p>More Series Articles about Stay Ahead of The Curve\uff1a</p> <p></p>","tags":["plugin"]},{"location":"Reference/obsidian/My%2010%2B%20Obsidian%20Plugins%20As%20a%20Medium%20Writer/#stay-ahead-of-the-curve","title":"Stay Ahead of The Curve","text":"<p>And I\u2019m Wesley, delighted to share knowledge from the world of programming.</p> <p>Don\u2019t forget to follow me for more informative content, or feel free to share this with others who may also find it beneficial. it would be a great help to me.</p> <p>Give me some free applauds, highlights, or replies, and I\u2019ll pay attention to those reactions, which will determine whether or not I continue to post this type of article.</p> <p>See you in the next article. \ud83d\udc4b</p> <p>\u4e2d\u6587\u6587\u7ae0: https://programmerscareer.com/zh-cn/obsidian-plugins/Author: Wesley Wei \u2014 Twitter Wesley Wei \u2014 MediumNote: Originally written at https://programmerscareer.com/obsidian-plugins/ at 2024\u201307\u201314 21:38. If you choose to repost or use this article, please cite the original source.</p>","tags":["plugin"]},{"location":"VCS/Pre-commit/","title":"Pre-commit","text":""},{"location":"VCS/Pre-commit/#python","title":"Python","text":""},{"location":"VCS/Pre-commit/#ruff","title":"Ruff","text":""},{"location":"VCS/git/","title":"Git","text":"<p>Git game in Learn Git Branching</p>"},{"location":"VCS/git/#init","title":"Init","text":""},{"location":"VCS/git/#auth","title":"Auth","text":"<pre><code>git config --global user.name \"A.J.Zeller\"\ngit config --global user.email \"atticus.zeller@pm.me\"\ngit config --global init.defaultBranch main\ngit config credential.helper\n</code></pre>"},{"location":"VCS/git/#ssh","title":"SSH","text":"<p>in admin powershell</p>"},{"location":"VCS/git/#start-ssh-agent","title":"Start Ssh-agent","text":"<pre><code>Get-Service -Name ssh-agent | Set-Service -StartupType Manual\nStart-Service ssh-agent\n</code></pre>"},{"location":"VCS/git/#generate-key-pair","title":"Generate Key-pair","text":"<pre><code>ssh-keygen -t ed25519 -C \"atticus.zeller@pm.me\"\n</code></pre> <p>in normal powershell</p>"},{"location":"VCS/git/#add-ssh-key-pair-into-ssh-agent","title":"Add Ssh-key-pair into Ssh-agent","text":"<pre><code>ssh-add C:\\Users\\18317\\.ssh\\id_ed25519\n</code></pre> <pre><code>eval $(ssh-agent -s)\nssh-add ~/.ssh/id_ed25519\n</code></pre>"},{"location":"VCS/git/#copy-id_ed25519pub-into-github_ssh_setting-set-auth-key-type","title":"Copy id_ed25519.pub into github_ssh_setting Set Auth Key Type","text":"<pre><code>cat ~/.ssh/id_ed25519.pub | clip\n</code></pre> <pre><code>cat ~/.ssh/id_ed25519.pub\n</code></pre>"},{"location":"VCS/git/#test-ssh-connect-by-https","title":"Test Ssh Connect by Https","text":"<pre><code>ssh -T -p 443 git@ssh.github.com\n</code></pre>"},{"location":"VCS/git/#add-config","title":"Add Config","text":"<p>add the following text into <code>~/.ssh/config</code></p> <pre><code>nano ~/.ssh/config\n</code></pre> <p>windows in <code>c:\\user\\your_user_name\\.ssh\\config</code></p> <pre><code>Host github.com\n    Hostname ssh.github.com\n    Port 443\n    User git\n    # 30327 is your local proxy port\n    ProxyCommand nc -X connect -x 127.0.0.1:30327 %h %p\n</code></pre>"},{"location":"VCS/git/#test-test-ssh-connect","title":"Test Test Ssh Connect","text":"<p>you may need to enter yes as it's requiring to trust connection to github</p> <pre><code>ssh -T git@github.com\n</code></pre>"},{"location":"VCS/git/#remote","title":"Remote","text":"<p>list remote repo</p> <pre><code>git remote -v\n</code></pre> <p>add remote</p> <pre><code>git init\ngit add .\ngit commit -m \"Initial commit\"\ngit remote add origin &lt;remote_repo_URL&gt;\n</code></pre> <p>associate remote</p> <pre><code>git push -u origin main\n</code></pre> <p>set https to ssh</p> <pre><code>git remote set-url origin &lt;remote_repo_URL&gt;\n</code></pre>"},{"location":"VCS/git/#remove-track","title":"Remove Track","text":"<pre><code>git rm --cached &lt;file_path_or_folder&gt;\n# if folder add -r\n</code></pre>"},{"location":"VCS/git/#roll-back","title":"Roll back","text":"<pre><code># force roll back some commit\ngit reset --hard &lt;commit hash&gt;\n# force push remote\ngit push origin main -f\n</code></pre>"},{"location":"VCS/git/#sync-from-github","title":"Sync from Github","text":"<pre><code>git fetch origin\ngit reset --hard origin/main\ngit clean -fd\n</code></pre>"},{"location":"VCS/git/#submodule","title":"Submodule","text":"<p>clone with submodule</p> <pre><code>git clone --recurse-submodules &lt;repository-url&gt;\n# if forget to with params --recurse-submodules try following\ngit submodule update --init --recursive\n</code></pre> <p>add submodule or clone in main as submodule</p> <pre><code>git submodule add &lt;repository-url&gt; &lt;sub_repo_relative_path_to_root&gt;\n# if no .gitsubmodules appears try it\ngit submodule update --init --recursive\n</code></pre> <p>remove</p> <pre><code>rm -rf third_party/GS_ICP_SLAM\nrm -rf .git/modules/third_party/GS_ICP_SLAM\ngit config --remove-section submodule.third_party/GS_ICP_SLAM\n</code></pre>"},{"location":"VCS/git/#lfs","title":"LFS","text":"<pre><code>git lfs install\ngit lfs track \"*.onnx\"\ngit add .gitattributes\ngit add  \"&lt;file_path&gt;.onnx\"\ngit commit -m \"add extractor model .onnx\"\ngit push origin main\n</code></pre>"},{"location":"VCS/github/SSH_keypair_setup_for_GitHub/","title":"SSH","text":"<p>system: win11 in admin powershell</p>"},{"location":"VCS/github/SSH_keypair_setup_for_GitHub/#start-ssh-agent","title":"Start Ssh-agent","text":"<pre><code>Get-Service -Name ssh-agent | Set-Service -StartupType Manual\nStart-Service ssh-agent\n</code></pre>"},{"location":"VCS/github/SSH_keypair_setup_for_GitHub/#generate-key-pair","title":"Generate Key-pair","text":"<pre><code>ssh-keygen -t ed25519 -C \"1831768457@qq.com\"\n</code></pre> <p>in normal powershell</p>"},{"location":"VCS/github/SSH_keypair_setup_for_GitHub/#add-ssh-key-pair-into-ssh-agent","title":"Add Ssh-key-pair into Ssh-agent","text":"<pre><code>ssh-add C:\\Users\\18317\\.ssh\\id_ed25519\n</code></pre>"},{"location":"VCS/github/SSH_keypair_setup_for_GitHub/#copy-id_ed25519pub-into-github_ssh_setting-set-auth-key-type","title":"Copy id_ed25519.pub into github_ssh_setting Set Auth Key Type","text":"<pre><code>cat ~/.ssh/id_ed25519.pub | clip\n</code></pre>"},{"location":"VCS/github/SSH_keypair_setup_for_GitHub/#test-ssh-connect-by-https","title":"Test Ssh Connect by Https","text":"<pre><code>ssh -T -p 443 git@ssh.github.com\n</code></pre>"},{"location":"VCS/github/SSH_keypair_setup_for_GitHub/#add-config","title":"Add Config","text":"<p>add the following text into <code>~/.ssh/config</code></p> <pre><code>Host github.com\n    Hostname ssh.github.com\n    Port 443\n    User git\n</code></pre>"},{"location":"VCS/github/SSH_keypair_setup_for_GitHub/#test-test-ssh-connect","title":"Test Test Ssh Connect","text":"<p>you may need to enter yes as it's requiring to trust connection to github</p> <pre><code>ssh -T git@github.com\n</code></pre> <p>Generating a new SSH key and adding it to the ssh-agent - GitHub Docs</p>"},{"location":"tools/IDE/JetBrains/","title":"JetBrains","text":""},{"location":"tools/IDE/JetBrains/#_1","title":"\u6fc0\u6d3b\u5de5\u5177","text":"<p>Linux\u6fc0\u6d3b\u6559\u7a0b - Feishu Docs</p> <ul> <li>\u4e0b\u8f7d\u5730\u5740  https://wwkh.lanzout.com/b03jufqhg  \u5bc6\u7801:7bou</li> </ul> <pre><code>chmod +x scripts/install.sh\n./scripts/install.sh\n</code></pre> <ul> <li>win \u7cfb\u7edf\u51fa\u73b0\u201cKey is invalid\u201d\u89e3\u51b3\u65b9\u6cd5,Linux \u7cfb\u7edf\u6309\u6559\u7a0b\u6b65\u9aa4\u627e Linux \u6587\u4ef6\u5939\u91cc\u6587\u4ef6  \u51fa\u73b0\u201cKey is invalid\u201d\u89e3\u51b3\u65b9\u6cd5 - Feishu Docs</li> </ul>"},{"location":"tools/IDE/JetBrains/#_2","title":"\u65ad\u7f51\u6fc0\u6d3b","text":"<p>\u6b63\u7248\u6fc0\u6d3b\u7801\uff1a https://hwmgu1yf37x.feishu.cn/docx/Y0PGdrvC2orriUxrFBxcavPxnqH</p> <p></p> <pre><code>KQ8KMJ77TY-eyJsaWNlbnNlSWQiOiJLUThLTUo3N1RZIiwibGljZW5zZWVOYW1lIjoiVW5pdmVyc2l0YXMgTmVnZXJpIE1hbGFuZyIsImxpY2Vuc2VlVHlwZSI6IkNMQVNTUk9PTSIsImFzc2lnbmVlTmFtZSI6IkpldOWFqOWutuahtiDorqTlh4blupflkI0iLCJhc3NpZ25lZUVtYWlsIjoibmtucWFyY214a0AxNjMuY29tIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiRm9yIGVkdWNhdGlvbmFsIHVzZSBvbmx5IiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJHTyIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiQ0wiLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTVSIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUlNDIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEUyIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUkQiLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJDIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJSU0YiLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IklJIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEUE4iLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJEQyIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUFMiLCJwYWlkVXBUbyI6IjIwMjQtMTItMDciLCJleHRlbmRlZCI6ZmFsc2V9LHsiY29kZSI6IlJTViIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUFNJIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDV01QIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlJTIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IkRQIiwicGFpZFVwVG8iOiIyMDI0LTEyLTA3IiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBEQiIsInBhaWRVcFRvIjoiMjAyNC0xMi0wNyIsImV4dGVuZGVkIjp0cnVlfV0sIm1ldGFkYXRhIjoiMDEyMDIzMTIwOUxQQUEwMDEwMDkiLCJoYXNoIjoiNTI1MDgyODgvMjUxMjMyNjE6LTE1MDQzMDI5NDAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZSwidHJpYWwiOmZhbHNlLCJhaUFsbG93ZWQiOnRydWV9-QKJUeHFkc+NaPWlEFZFGpoBJBYjehR5cGPezKK9BKHVnVaydzLV4YSAnILt8mz9twXw9lIh0k/HivsPKrffP8F9gZkWA/rfjieSI0jziDr9WBARPzYKRlQHSw/iZn5VUn6zIR9U7uJC6Kd/jiaeLumn+dzL/ia9B/1dBUIg5WQlIOtld4xx2xR0gb4JCNBd4kQMV4SAC3Og13/APGkDiP7KzDz7T3DxmpSKvjAfG1Hg1jn2pt5B/3gmhOK5lmJKbGBDRW40f4sqyDpzXsA5DaPAAaFT07GSL5FlfdKfngGjcQdwQ18k1iFET6wSwWkk+p+OySDqegpFw3wx2Kzj+Ow==-MIIETDCCAjSgAwIBAgIBDzANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIyMTAxMDE2MDU0NFoXDTI0MTAxMTE2MDU0NFowHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMjEwMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC/W3uCpU5M2y48rUR/3fFR6y4xj1nOm3rIuGp2brELVGzdgK2BezjnDXpAxVDw5657hBkAUMoyByiDs2MgmVi9IcqdAwpk988/Daaajq9xuU1of59jH9eQ9c3BmsEtdA4boN3VpenYKATwmpKYkJKVc07ZKoXL6kSyZuF7Jq7HoQZcclChbF75QJPGbri3cw9vDk/e46kuzfwpGftvl6+vKibpInO6Dv0ocwImDbOutyZC7E+BwpEm1TJZW4XovMBegHhWC04cJvpH1u98xoR94ichw0jKhdppywARe43rGU96163RckIuFmFDQKZV9SMUrwpQFu4Z2D5yTNqnlLRfAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQU5FZqQ4gnVc+inIeZF+o3ID+VhcEwSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBANLG1anEKid4W87vQkqWaQTkRtFKJ2GFtBeMhvLhIyM6Cg3FdQnMZr0qr9mlV0w289pf/+M14J7S7SgsfwxMJvFbw9gZlwHvhBl24N349GuthshGO9P9eKmNPgyTJzTtw6FedXrrHV99nC7spaY84e+DqfHGYOzMJDrg8xHDYLLHk5Q2z5TlrztXMbtLhjPKrc2+ZajFFshgE5eowfkutSYxeX8uA5czFNT1ZxmDwX1KIelbqhh6XkMQFJui8v8Eo396/sN3RAQSfvBd7Syhch2vlaMP4FAB11AlMKO2x/1hoKiHBU3oU3OKRTfoUTfy1uH3T+t03k1Qkr0dqgHLxiv6QU5WrarR9tx/dapqbsSmrYapmJ7S5+ghc4FTWxXJB1cjJRh3X+gwJIHjOVW+5ZVqXTG2s2Jwi2daDt6XYeigxgL2SlQpeL5kvXNCcuSJurJVcRZFYUkzVv85XfDauqGxYqaehPcK2TzmcXOUWPfxQxLJd2TrqSiO+mseqqkNTb3ZDiYS/ZqdQoGYIUwJqXo+EDgqlmuWUhkWwCkyo4rtTZeAj+nP00v3n8JmXtO30Fip+lxpfsVR3tO1hk4Vi2kmVjXyRkW2G7D7WAVt+91ahFoSeRWlKyb4KcvGvwUaa43fWLem2hyI4di2pZdr3fcYJ3xvL5ejL3m14bKsfoOv\n</code></pre> <p>Code completion | PyCharm Documentation</p>"}]}